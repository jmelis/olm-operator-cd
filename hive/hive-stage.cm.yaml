apiVersion: v1
data:
  clusterServiceVersions: |
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          categories: A list of comma separated categories that your operator falls under.
          certified: 'false'
          containerImage: quay.io/dgoodwin/hive:5f9f2d45
          createdAt: '2019-03-06T14:51:38Z'
          description: OpenShift cluster provisioning and management at scale.
          support: Devan Goodwin
        name: hive-operator-0.0.1
        namespace: placeholder
      spec:
        customresourcedefinitions:
          owned:
          - description: Configuration for the Hive Operator
            displayName: Hive Config
            kind: HiveConfig
            name: hiveconfigs.hive.openshift.io
            version: v1alpha1
          - description: Defines an OpenShift cluster to be created.
            displayName: Cluster Deployment
            kind: ClusterDeployment
            name: clusterdeployments.hive.openshift.io
            version: v1alpha1
          - description: Defines a DNSZone to be managed in a cloud provider.
            displayName: DNS Zone
            kind: DNSZone
            name: dnszones.hive.openshift.io
            version: v1alpha1
        description: |-
          OpenShift cluster provisioning and management at scale.
        displayName: Hive
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ''
                resources:
                - serviceaccounts
                - serviceaccounts/finalizers
                - secrets
                - secrets/finalizers
                - services
                - services/finalizers
                - events
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - apiregistration.k8s.io
                resources:
                - apiservices
                - apiservices/finalizers
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - validatingwebhookconfigurations
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - apps
                resources:
                - deployments
                - deployments/finalizers
                - daemonsets
                - daemonsets/finalizers
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - apps.openshift.io
                resources:
                - deploymentconfigs
                - deploymentconfigs/finalizers
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - hive.openshift.io
                resources:
                - hiveconfigs
                - hiveconfigs/finalizers
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              serviceAccountName: hive-operator
            - rules:
              - apiGroups:
                - batch
                resources:
                - jobs
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - ''
                resources:
                - serviceaccounts
                - secrets
                - configmaps
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - rbac.authorization.k8s.io
                resources:
                - roles
                - rolebindings
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - hive.openshift.io
                resources:
                - clusterdeployments
                - clusterdeployments/status
                - clusterdeployments/finalizers
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - hive.openshift.io
                resources:
                - clusterimagesets
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - hive.openshift.io
                resources:
                - clusterimagesets/status
                verbs:
                - get
                - update
                - patch
              - apiGroups:
                - hive.openshift.io
                resources:
                - dnszones
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - get
                - list
                - watch
              - apiGroups:
                - clusterregistry.k8s.io
                resources:
                - clusters
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              - apiGroups:
                - core.federation.k8s.io
                resources:
                - federatedclusters
                verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
              serviceAccountName: hive-controllers
            - rules:
              - apiGroups:
                - admission.hive.openshift.io
                resources:
                - dnszones
                verbs:
                - get
                - list
                - watch
              - apiGroups:
                - ''
                resources:
                - configmaps
                verbs:
                - get
              - apiGroups:
                - admissionregistration.k8s.io
                resources:
                - validatingwebhookconfigurations
                - mutatingwebhookconfigurations
                verbs:
                - get
                - list
                - watch
              - apiGroups:
                - ''
                resources:
                - namespaces
                verbs:
                - get
                - list
                - watch
              serviceAccountName: hiveadmission
            deployments:
            - name: hive-operator
              spec:
                replicas: 1
                revisionHistoryLimit: 4
                selector:
                  matchLabels:
                    control-plane: hive-operator
                    controller-tools.k8s.io: '1.0'
                template:
                  metadata:
                    labels:
                      control-plane: hive-operator
                      controller-tools.k8s.io: '1.0'
                  spec:
                    containers:
                    - command:
                      - /opt/services/hive-operator
                      - --log-level
                      - debug
                      image: quay.io/dgoodwin/hive:5f9f2d45
                      imagePullPolicy: Always
                      name: hive-operator
                      resources:
                        limits:
                          cpu: 100m
                          memory: 256Mi
                        requests:
                          cpu: 100m
                          memory: 75Mi
                    serviceAccountName: hive-operator
                    terminationGracePeriodSeconds: 10
          strategy: deployment
        installModes:
        - supported: true
          type: OwnNamespace
        - supported: true
          type: SingleNamespace
        - supported: true
          type: MultiNamespace
        - supported: true
          type: AllNamespaces
        keywords:
        - kubernetes
        - openshift
        - multi-cluster
        - cluster
        maturity: alpha
        provider:
          name: Red Hat, Inc
        version: 0.0.1
  customResourceDefinitions: |
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: '1.0'
        name: selectorsyncsets.hive.openshift.io
      spec:
        group: hive.openshift.io
        names:
          kind: SelectorSyncSet
          plural: selectorsyncsets
        scope: Cluster
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterDeploymentSelector:
                    description: ClusterDeploymentSelector is a LabelSelector indicating
                      which clusters the SelectorSyncSet applies to in any namespace.
                    type: object
                  patches:
                    description: Patches is the list of patches to apply.
                    items:
                      properties:
                        groupVersionKind:
                          description: GroupVersionKind is the Group, Version and Kind
                            of the object to be patched.
                          type: object
                        name:
                          description: Name is the name of the object to be patched.
                          type: string
                        namespace:
                          description: Namespace is the Namespace in which the object
                            to patch exists. Defaults to the SyncSet's Namespace.
                          type: string
                        patch:
                          description: Patch is the patch to apply.
                          format: byte
                          type: string
                        patchType:
                          description: PatchType indicates the PatchType as "json" (default),
                            "merge" or "strategic".
                          type: string
                      required:
                      - groupVersionKind
                      - name
                      - patch
                      type: object
                    type: array
                  resourceApplyMode:
                    description: ResourceApplyMode indicates if the resource apply mode
                      is "upsert" (default) or "sync". ApplyMode "upsert" indicates create
                      and update. ApplyMode "sync" indicates create, update and delete.
                    type: string
                  resources:
                    description: Resources is the list of objects to sync.
                    items:
                      type: object
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ''
          plural: ''
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: '1.0'
        name: clusterimagesets.hive.openshift.io
      spec:
        additionalPrinterColumns:
        - JSONPath: .spec.hiveImage
          name: Hive
          type: string
        - JSONPath: .status.installerImage
          name: Installer
          type: string
        - JSONPath: .spec.releaseImage
          name: Release
          type: string
        group: hive.openshift.io
        names:
          kind: ClusterImageSet
          plural: clusterimagesets
          shortNames:
          - imgset
        scope: Cluster
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  hiveImage:
                    description: HiveImage is the Hive image to use when installing or
                      destroying a cluster. If not present, the default Hive image for
                      the clusterdeployment controller is used.
                    type: string
                  installerImage:
                    description: InstallerImage is the image used to install a cluster.
                      If not specified, the installer image reference is obtained from
                      the release image.
                    type: string
                  releaseImage:
                    description: ReleaseImage is the image that contains the payload to
                      use when installing a cluster. If the installer image is specified,
                      the release image is optional.
                    type: string
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ''
          plural: ''
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: '1.0'
        name: clusterdeployments.hive.openshift.io
      spec:
        additionalPrinterColumns:
        - JSONPath: .spec.baseDomain
          name: BaseDomain
          type: string
        - JSONPath: .status.installed
          name: Installed
          type: boolean
        - JSONPath: .metadata.creationTimestamp
          name: Age
          type: date
        group: hive.openshift.io
        names:
          kind: ClusterDeployment
          plural: clusterdeployments
          shortNames:
          - cd
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  baseDomain:
                    description: BaseDomain is the base domain to which the cluster should
                      belong.
                    type: string
                  clusterName:
                    description: ClusterName is the friendly name of the cluster. It is
                      used for subdomains, some resource tagging, and other instances
                      where a friendly name for the cluster is useful.
                    type: string
                  compute:
                    description: Compute is the list of MachinePools containing compute
                      nodes that need to be installed.
                    items:
                      properties:
                        labels:
                          description: Map of label string keys and values that will be
                            applied to the created MachineSet's MachineSpec. This list
                            will overwrite any modifications made to Node labels on an
                            ongoing basis.
                          type: object
                        name:
                          description: Name is the name of the machine pool.
                          type: string
                        platform:
                          description: Platform is configuration for machine pool specific
                            to the platfrom.
                          properties:
                            aws:
                              description: AWS is the configuration used when installing
                                on AWS.
                              properties:
                                rootVolume:
                                  description: EC2RootVolume defines the storage for ec2
                                    instance.
                                  properties:
                                    iops:
                                      description: IOPS defines the iops for the instance.
                                      format: int64
                                      type: integer
                                    size:
                                      description: Size defines the size of the instance.
                                      format: int64
                                      type: integer
                                    type:
                                      description: Type defines the type of the instance.
                                      type: string
                                  required:
                                  - iops
                                  - size
                                  - type
                                  type: object
                                type:
                                  description: InstanceType defines the ec2 instance type.
                                    eg. m4-large
                                  type: string
                                zones:
                                  description: Zones is list of availability zones that
                                    can be used.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - type
                              - rootVolume
                              type: object
                            libvirt:
                              description: Libvirt is the configuration used when installing
                                on libvirt.
                              properties:
                                image:
                                  description: Image is the URL to the OS image. E.g.
                                    "http://aos-ostree.rhev-ci-vms.eng.rdu2.redhat.com/rhcos/images/cloud/latest/rhcos-qemu.qcow2.gz"
                                  type: string
                                imagePool:
                                  description: ImagePool is the name of the libvirt storage
                                    pool to which the storage volume containing the OS
                                    image belongs.
                                  type: string
                                imageVolume:
                                  description: ImageVolume is the name of the libvirt
                                    storage volume containing the OS image.
                                  type: string
                              required:
                              - image
                              type: object
                            openstack:
                              description: OpenStack is the configuration used when installing
                                on OpenStack.
                              properties:
                                rootVolume:
                                  description: OpenStackRootVolume defines the storage
                                    for Nova instance.
                                  properties:
                                    iops:
                                      description: IOPS defines the iops for the instance.
                                      format: int64
                                      type: integer
                                    size:
                                      description: Size defines the size of the instance.
                                      format: int64
                                      type: integer
                                    type:
                                      description: Type defines the type of the instance.
                                      type: string
                                  required:
                                  - iops
                                  - size
                                  - type
                                  type: object
                                type:
                                  description: FlavorName defines the OpenStack Nova flavor.
                                    eg. m1.large
                                  type: string
                              required:
                              - type
                              - rootVolume
                              type: object
                          type: object
                        replicas:
                          description: Replicas is the count of machines for this machine
                            pool. Default is 1.
                          format: int64
                          type: integer
                        taints:
                          description: List of taints that will be applied to the created
                            MachineSet's MachineSpec. This list will overwrite any modifications
                            made to Node taints on an ongoing basis.
                          items:
                            type: object
                          type: array
                      required:
                      - name
                      - replicas
                      - platform
                      type: object
                    type: array
                  controlPlane:
                    description: ControlPlane is the MachinePool containing control plane
                      nodes that need to be installed.
                    properties:
                      labels:
                        description: Map of label string keys and values that will be
                          applied to the created MachineSet's MachineSpec. This list will
                          overwrite any modifications made to Node labels on an ongoing
                          basis.
                        type: object
                      name:
                        description: Name is the name of the machine pool.
                        type: string
                      platform:
                        description: Platform is configuration for machine pool specific
                          to the platfrom.
                        properties:
                          aws:
                            description: AWS is the configuration used when installing
                              on AWS.
                            properties:
                              rootVolume:
                                description: EC2RootVolume defines the storage for ec2
                                  instance.
                                properties:
                                  iops:
                                    description: IOPS defines the iops for the instance.
                                    format: int64
                                    type: integer
                                  size:
                                    description: Size defines the size of the instance.
                                    format: int64
                                    type: integer
                                  type:
                                    description: Type defines the type of the instance.
                                    type: string
                                required:
                                - iops
                                - size
                                - type
                                type: object
                              type:
                                description: InstanceType defines the ec2 instance type.
                                  eg. m4-large
                                type: string
                              zones:
                                description: Zones is list of availability zones that
                                  can be used.
                                items:
                                  type: string
                                type: array
                            required:
                            - type
                            - rootVolume
                            type: object
                          libvirt:
                            description: Libvirt is the configuration used when installing
                              on libvirt.
                            properties:
                              image:
                                description: Image is the URL to the OS image. E.g. "http://aos-ostree.rhev-ci-vms.eng.rdu2.redhat.com/rhcos/images/cloud/latest/rhcos-qemu.qcow2.gz"
                                type: string
                              imagePool:
                                description: ImagePool is the name of the libvirt storage
                                  pool to which the storage volume containing the OS image
                                  belongs.
                                type: string
                              imageVolume:
                                description: ImageVolume is the name of the libvirt storage
                                  volume containing the OS image.
                                type: string
                            required:
                            - image
                            type: object
                          openstack:
                            description: OpenStack is the configuration used when installing
                              on OpenStack.
                            properties:
                              rootVolume:
                                description: OpenStackRootVolume defines the storage for
                                  Nova instance.
                                properties:
                                  iops:
                                    description: IOPS defines the iops for the instance.
                                    format: int64
                                    type: integer
                                  size:
                                    description: Size defines the size of the instance.
                                    format: int64
                                    type: integer
                                  type:
                                    description: Type defines the type of the instance.
                                    type: string
                                required:
                                - iops
                                - size
                                - type
                                type: object
                              type:
                                description: FlavorName defines the OpenStack Nova flavor.
                                  eg. m1.large
                                type: string
                            required:
                            - type
                            - rootVolume
                            type: object
                        type: object
                      replicas:
                        description: Replicas is the count of machines for this machine
                          pool. Default is 1.
                        format: int64
                        type: integer
                      taints:
                        description: List of taints that will be applied to the created
                          MachineSet's MachineSpec. This list will overwrite any modifications
                          made to Node taints on an ongoing basis.
                        items:
                          type: object
                        type: array
                    required:
                    - name
                    - replicas
                    - platform
                    type: object
                  imageSet:
                    description: ImageSet is a reference to a ClusterImageSet. If values
                      are specified for Images, those will take precedence over the ones
                      from the ClusterImageSet.
                    properties:
                      name:
                        description: Name is the name of the ClusterImageSet that this
                          refers to
                        type: string
                    required:
                    - name
                    type: object
                  images:
                    description: Images allows overriding the default images used to provision
                      and manage the cluster.
                    properties:
                      hiveImage:
                        description: HiveImage is the image used in the sidecar container
                          to manage execution of openshift-install.
                        type: string
                      hiveImagePullPolicy:
                        description: HiveImagePullPolicy is the pull policy for the installer
                          image.
                        type: string
                      installerImage:
                        description: InstallerImage is the image containing the openshift-install
                          binary that will be used to install.
                        type: string
                      installerImagePullPolicy:
                        description: InstallerImagePullPolicy is the pull policy for the
                          installer image.
                        type: string
                      releaseImage:
                        description: ReleaseImage is the image containing metadata for
                          all components that run in the cluster, and is the primary and
                          best way to specify what specific version of OpenShift you wish
                          to install.
                        type: string
                    type: object
                  networking:
                    description: Networking defines the pod network provider in the cluster.
                    properties:
                      clusterNetworks:
                        description: ClusterNetworks is the IP address space from which
                          to assign pod IPs.
                        items:
                          properties:
                            cidr:
                              type: string
                            hostSubnetLength:
                              format: int32
                              type: integer
                          required:
                          - cidr
                          - hostSubnetLength
                          type: object
                        type: array
                      machineCIDR:
                        description: MachineCIDR is the IP address space from which to
                          assign machine IPs.
                        type: string
                      serviceCIDR:
                        description: ServiceCIDR is the IP address space from which to
                          assign service IPs.
                        type: string
                      type:
                        description: Type is the network type to install
                        type: string
                    required:
                    - machineCIDR
                    - type
                    - serviceCIDR
                    type: object
                  platform:
                    description: Platform is the configuration for the specific platform
                      upon which to perform the installation.
                    properties:
                      aws:
                        description: AWS is the configuration used when installing on
                          AWS.
                        properties:
                          defaultMachinePlatform:
                            description: DefaultMachinePlatform is the default configuration
                              used when installing on AWS for machine pools which do not
                              define their own platform configuration.
                            properties:
                              rootVolume:
                                description: EC2RootVolume defines the storage for ec2
                                  instance.
                                properties:
                                  iops:
                                    description: IOPS defines the iops for the instance.
                                    format: int64
                                    type: integer
                                  size:
                                    description: Size defines the size of the instance.
                                    format: int64
                                    type: integer
                                  type:
                                    description: Type defines the type of the instance.
                                    type: string
                                required:
                                - iops
                                - size
                                - type
                                type: object
                              type:
                                description: InstanceType defines the ec2 instance type.
                                  eg. m4-large
                                type: string
                              zones:
                                description: Zones is list of availability zones that
                                  can be used.
                                items:
                                  type: string
                                type: array
                            required:
                            - type
                            - rootVolume
                            type: object
                          region:
                            description: Region specifies the AWS region where the cluster
                              will be created.
                            type: string
                          userTags:
                            description: UserTags specifies additional tags for AWS resources
                              created for the cluster.
                            type: object
                        required:
                        - region
                        type: object
                      libvirt:
                        description: Libvirt is the configuration used when installing
                          on libvirt.
                        properties:
                          URI:
                            description: URI is the identifier for the libvirtd connection.  It
                              must be reachable from both the host (where the installer
                              is run) and the cluster (where the cluster-API controller
                              pod will be running).
                            type: string
                          defaultMachinePlatform:
                            description: DefaultMachinePlatform is the default configuration
                              used when installing on AWS for machine pools which do not
                              define their own platform configuration.
                            properties:
                              image:
                                description: Image is the URL to the OS image. E.g. "http://aos-ostree.rhev-ci-vms.eng.rdu2.redhat.com/rhcos/images/cloud/latest/rhcos-qemu.qcow2.gz"
                                type: string
                              imagePool:
                                description: ImagePool is the name of the libvirt storage
                                  pool to which the storage volume containing the OS image
                                  belongs.
                                type: string
                              imageVolume:
                                description: ImageVolume is the name of the libvirt storage
                                  volume containing the OS image.
                                type: string
                            required:
                            - image
                            type: object
                          masterIPs:
                            description: MasterIPs
                            items:
                              format: byte
                              type: string
                            type: array
                          network:
                            description: Network
                            properties:
                              if:
                                description: IfName is the name of the network interface.
                                type: string
                              ipRange:
                                description: IPRange is the range of IPs to use.
                                type: string
                              name:
                                description: Name is the name of the nework.
                                type: string
                            required:
                            - name
                            - if
                            - ipRange
                            type: object
                        required:
                        - URI
                        - network
                        - masterIPs
                        type: object
                    type: object
                  platformSecrets:
                    description: PlatformSecrets contains credentials and secrets for
                      the cluster infrastructure.
                    properties:
                      aws:
                        properties:
                          credentials:
                            description: Credentials refers to a secret that contains
                              the AWS account access credentials.
                            type: object
                        required:
                        - credentials
                        type: object
                    type: object
                  preserveOnDelete:
                    description: PreserveOnDelete allows the user to disconnect a cluster
                      from Hive without deprovisioning it
                    type: boolean
                  pullSecret:
                    description: PullSecret is the reference to the secret to use when
                      pulling images.
                    type: object
                  sshKey:
                    description: SSHKey is the reference to the secret that contains a
                      public key to use for access to compute instances.
                    type: object
                required:
                - clusterName
                - baseDomain
                - networking
                - controlPlane
                - compute
                - platform
                - pullSecret
                - platformSecrets
                type: object
              status:
                properties:
                  adminKubeconfigSecret:
                    description: AdminKubeconfigSecret references the secret containing
                      the admin kubeconfig for this cluster.
                    type: object
                  adminPasswordSecret:
                    description: AdminPasswordSecret references the secret containing
                      the admin username/password which can be used to login to this cluster.
                    type: object
                  apiURL:
                    description: APIURL is the URL where the cluster's API can be accessed.
                    type: string
                  clusterID:
                    description: ClusterID is a globally unique identifier for this cluster
                      generated during installation. Used for reporting metrics among
                      other places.
                    type: string
                  clusterVersionStatus:
                    description: ClusterVersionStatus will hold a copy of the remote cluster's
                      ClusterVersion.Status
                    properties:
                      availableUpdates:
                        description: availableUpdates contains the list of updates that
                          are appropriate for this cluster. This list may be empty if
                          no updates are recommended, if the update service is unavailable,
                          or if an invalid channel has been specified.
                        items:
                          properties:
                            payload:
                              description: payload is a container image location that
                                contains the update. When this field is part of spec,
                                payload is optional if version is specified and the availableUpdates
                                field contains a matching version.
                              type: string
                            version:
                              description: version is a semantic versioning identifying
                                the update version. When this field is part of spec, version
                                is optional if payload is specified.
                              type: string
                          type: object
                        type: array
                      conditions:
                        description: conditions provides information about the cluster
                          version. The condition "Available" is set to true if the desiredUpdate
                          has been reached. The condition "Progressing" is set to true
                          if an update is being applied. The condition "Failing" is set
                          to true if an update is currently blocked by a temporary or
                          permanent error. Conditions are only valid for the current desiredUpdate
                          when metadata.generation is equal to status.generation.
                        items:
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the time of the last
                                update to the current status object.
                              format: date-time
                              type: string
                            message:
                              description: message provides additional information about
                                the current condition. This is only to be consumed by
                                humans.
                              type: string
                            reason:
                              description: reason is the reason for the condition's last
                                transition.  Reasons are CamelCase
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: type specifies the state of the operator's
                                reconciliation functionality.
                              type: string
                          required:
                          - type
                          - status
                          - lastTransitionTime
                          type: object
                        type: array
                      desired:
                        description: desired is the version that the cluster is reconciling
                          towards. If the cluster is not yet fully initialized desired
                          will be set with the information available, which may be a payload
                          or a tag.
                        properties:
                          payload:
                            description: payload is a container image location that contains
                              the update. When this field is part of spec, payload is
                              optional if version is specified and the availableUpdates
                              field contains a matching version.
                            type: string
                          version:
                            description: version is a semantic versioning identifying
                              the update version. When this field is part of spec, version
                              is optional if payload is specified.
                            type: string
                        type: object
                      generation:
                        description: generation reports which version of the spec is being
                          processed. If this value is not equal to metadata.generation,
                          then the current and conditions fields have not yet been updated
                          to reflect the latest request.
                        format: int64
                        type: integer
                      history:
                        description: history contains a list of the most recent versions
                          applied to the cluster. This value may be empty during cluster
                          startup, and then will be updated when a new update is being
                          applied. The newest update is first in the list and it is ordered
                          by recency. Updates in the history have state Completed if the
                          rollout completed - if an update was failing or halfway applied
                          the state will be Partial. Only a limited amount of update history
                          is preserved.
                        items:
                          properties:
                            completionTime:
                              description: completionTime, if set, is when the update
                                was fully applied. The update that is currently being
                                applied will have a null completion time. Completion time
                                will always be set for entries that are not the current
                                update (usually to the started time of the next update).
                              format: date-time
                              type: string
                            payload:
                              description: payload is a container image location that
                                contains the update. This value is always populated.
                              type: string
                            startedTime:
                              description: startedTime is the time at which the update
                                was started.
                              format: date-time
                              type: string
                            state:
                              description: state reflects whether the update was fully
                                applied. The Partial state indicates the update is not
                                fully applied, while the Completed state indicates the
                                update was successfully rolled out at least once (all
                                parts of the update successfully applied).
                              type: string
                            version:
                              description: version is a semantic versioning identifying
                                the update version. If the requested payload does not
                                define a version, or if a failure occurs retrieving the
                                payload, this value may be empty.
                              type: string
                          required:
                          - state
                          - startedTime
                          - completionTime
                          - payload
                          type: object
                        type: array
                      versionHash:
                        description: versionHash is a fingerprint of the content that
                          the cluster will be updated with. It is used by the operator
                          to avoid unnecessary work and is for internal use only.
                        type: string
                    required:
                    - desired
                    - history
                    - generation
                    - versionHash
                    - conditions
                    - availableUpdates
                    type: object
                  conditions:
                    description: Conditions includes more detailed status for the cluster
                      deployment
                    items:
                      properties:
                        lastProbeTime:
                          description: LastProbeTime is the last time we probed the condition.
                          format: date-time
                          type: string
                        lastTransitionTime:
                          description: LastTransitionTime is the last time the condition
                            transitioned from one status to another.
                          format: date-time
                          type: string
                        message:
                          description: Message is a human-readable message indicating
                            details about last transition.
                          type: string
                        reason:
                          description: Reason is a unique, one-word, CamelCase reason
                            for the condition's last transition.
                          type: string
                        status:
                          description: Status is the status of the condition.
                          type: string
                        type:
                          description: Type is the type of the condition.
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  federated:
                    description: Federated is true if the cluster deployment has been
                      federated with the host cluster.
                    type: boolean
                  federatedClusterRef:
                    description: FederatedClusterRef is the reference to the federated
                      cluster resource associated with this ClusterDeployment.
                    type: object
                  infraID:
                    description: InfraID is an identifier for this cluster generated during
                      installation and used for tagging/naming resources in cloud providers.
                    type: string
                  installed:
                    description: Installed is true if the installer job has successfully
                      completed for this cluster.
                    type: boolean
                  installerImage:
                    description: InstallerImage is the name of the installer image to
                      use when installing the target cluster
                    type: string
                  syncPatches:
                    description: SyncPatches is the list of SyncStatus for patches that
                      have been applied.
                    items:
                      properties:
                        conditions:
                          description: Conditions is the list of conditions indicating
                            success or failure of object create, update and delete as
                            well as patch application.
                          items:
                            properties:
                              lastProbeTime:
                                description: LastProbeTime is the last time we probed
                                  the condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the condition
                                  transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: Message is a human-readable message indicating
                                  details about last transition.
                                type: string
                              reason:
                                description: Reason is a unique, one-word, CamelCase reason
                                  for the condition's last transition.
                                type: string
                              status:
                                description: Status is the status of the condition.
                                type: string
                              type:
                                description: Type is the type of the condition.
                                type: string
                            required:
                            - type
                            - status
                            type: object
                          type: array
                        groupVersionKind:
                          description: GroupVersionKind is the Group, Version and Kind
                            of the object that was synced or patched.
                          type: object
                        hash:
                          description: Hash is the unique md5 hash of the resource or
                            patch.
                          format: byte
                          type: string
                        name:
                          description: Name is the name of the object that was synced
                            or patched.
                          type: string
                        namespace:
                          description: Namespace is the Namespace of the object that was
                            synced or patched.
                          type: string
                      required:
                      - groupVersionKind
                      - name
                      - namespace
                      - hash
                      - conditions
                      type: object
                    type: array
                  syncResources:
                    description: SyncResources is the list of SyncStatus for objects that
                      have been synced.
                    items:
                      properties:
                        conditions:
                          description: Conditions is the list of conditions indicating
                            success or failure of object create, update and delete as
                            well as patch application.
                          items:
                            properties:
                              lastProbeTime:
                                description: LastProbeTime is the last time we probed
                                  the condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the condition
                                  transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: Message is a human-readable message indicating
                                  details about last transition.
                                type: string
                              reason:
                                description: Reason is a unique, one-word, CamelCase reason
                                  for the condition's last transition.
                                type: string
                              status:
                                description: Status is the status of the condition.
                                type: string
                              type:
                                description: Type is the type of the condition.
                                type: string
                            required:
                            - type
                            - status
                            type: object
                          type: array
                        groupVersionKind:
                          description: GroupVersionKind is the Group, Version and Kind
                            of the object that was synced or patched.
                          type: object
                        hash:
                          description: Hash is the unique md5 hash of the resource or
                            patch.
                          format: byte
                          type: string
                        name:
                          description: Name is the name of the object that was synced
                            or patched.
                          type: string
                        namespace:
                          description: Namespace is the Namespace of the object that was
                            synced or patched.
                          type: string
                      required:
                      - groupVersionKind
                      - name
                      - namespace
                      - hash
                      - conditions
                      type: object
                    type: array
                  webConsoleURL:
                    description: WebConsoleURL is the URL for the cluster's web console
                      UI.
                    type: string
                required:
                - installed
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ''
          plural: ''
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: '1.0'
        name: syncsets.hive.openshift.io
      spec:
        group: hive.openshift.io
        names:
          kind: SyncSet
          plural: syncsets
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterDeploymentRefs:
                    description: ClusterDeploymentRefs is the list of LocalObjectReference
                      indicating which clusters the SyncSet applies to in the SyncSet's
                      namespace.
                    items:
                      type: object
                    type: array
                  patches:
                    description: Patches is the list of patches to apply.
                    items:
                      properties:
                        groupVersionKind:
                          description: GroupVersionKind is the Group, Version and Kind
                            of the object to be patched.
                          type: object
                        name:
                          description: Name is the name of the object to be patched.
                          type: string
                        namespace:
                          description: Namespace is the Namespace in which the object
                            to patch exists. Defaults to the SyncSet's Namespace.
                          type: string
                        patch:
                          description: Patch is the patch to apply.
                          format: byte
                          type: string
                        patchType:
                          description: PatchType indicates the PatchType as "json" (default),
                            "merge" or "strategic".
                          type: string
                      required:
                      - groupVersionKind
                      - name
                      - patch
                      type: object
                    type: array
                  resourceApplyMode:
                    description: ResourceApplyMode indicates if the resource apply mode
                      is "upsert" (default) or "sync". ApplyMode "upsert" indicates create
                      and update. ApplyMode "sync" indicates create, update and delete.
                    type: string
                  resources:
                    description: Resources is the list of objects to sync.
                    items:
                      type: object
                    type: array
                required:
                - clusterDeploymentRefs
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ''
          plural: ''
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: '1.0'
        name: dnszones.hive.openshift.io
      spec:
        group: hive.openshift.io
        names:
          kind: DNSZone
          plural: dnszones
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  aws:
                    description: AWS specifies AWS-specific cloud configuration
                    properties:
                      accountSecret:
                        description: AccountSecret contains a reference to a secret that
                          contains AWS credentials for CRUD operations
                        type: object
                      region:
                        description: Region specifies the region-specific API endpoint
                          to use
                        type: string
                    required:
                    - accountSecret
                    - region
                    type: object
                  zone:
                    description: Zone is the DNS zoneto host
                    type: string
                required:
                - zone
                type: object
              status:
                properties:
                  lastSyncGeneration:
                    description: LastSyncGeneration is the generation of the zone resource
                      that was last sync'd. This is used to know if the Object has changed
                      and we should sync immediately.
                    format: int64
                    type: integer
                  lastSyncTimestamp:
                    description: LastSyncTimestamp is the time that the zone was last
                      sync'd.
                    format: date-time
                    type: string
                required:
                - lastSyncGeneration
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ''
          plural: ''
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: '1.0'
        name: syncidentityproviders.hive.openshift.io
      spec:
        group: hive.openshift.io
        names:
          kind: SyncIdentityProvider
          plural: syncidentityproviders
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterDeploymentRefs:
                    description: ClusterDeploymentRefs is the list of LocalObjectReference
                      indicating which clusters the SyncSet applies to in the SyncSet's
                      namespace.
                    items:
                      type: object
                    type: array
                  identityProviders:
                    description: IdentityProviders is an ordered list of ways for a user
                      to identify themselves
                    items:
                      properties:
                        basicAuth:
                          description: basicAuth contains configuration options for the
                            BasicAuth IdP
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            tlsClientCert:
                              description: tlsClientCert is an optional reference to a
                                secret by name that contains the PEM-encoded TLS client
                                certificate to present when connecting to the server.
                                The key "tls.crt" is used to locate the data. If specified
                                and the secret or expected key is not found, the identity
                                provider is not honored. If the specified certificate
                                data is not valid, the identity provider is not honored.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            tlsClientKey:
                              description: tlsClientKey is an optional reference to a
                                secret by name that contains the PEM-encoded TLS private
                                key for the client certificate referenced in tlsClientCert.
                                The key "tls.key" is used to locate the data. If specified
                                and the secret or expected key is not found, the identity
                                provider is not honored. If the specified certificate
                                data is not valid, the identity provider is not honored.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            url:
                              description: url is the remote URL to connect to
                              type: string
                          required:
                          - url
                          type: object
                        challenge:
                          description: challenge indicates whether to issue WWW-Authenticate
                            challenges for this provider
                          type: boolean
                        github:
                          description: github enables user authentication using GitHub
                            credentials
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. This can only be configured when hostname is set
                                to a non-empty value. The namespace for this config map
                                is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            clientID:
                              description: clientID is the oauth client ID
                              type: string
                            clientSecret:
                              description: clientSecret is a required reference to the
                                secret by name containing the oauth client secret. The
                                key "clientSecret" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            hostname:
                              description: hostname is the optional domain (e.g. "mycompany.com")
                                for use with a hosted instance of GitHub Enterprise. It
                                must match the GitHub Enterprise settings value configured
                                at /setup/settings#hostname.
                              type: string
                            organizations:
                              description: organizations optionally restricts which organizations
                                are allowed to log in
                              items:
                                type: string
                              type: array
                            teams:
                              description: teams optionally restricts which teams are
                                allowed to log in. Format is <org>/<team>.
                              items:
                                type: string
                              type: array
                          required:
                          - clientID
                          - clientSecret
                          type: object
                        gitlab:
                          description: gitlab enables user authentication using GitLab
                            credentials
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            clientID:
                              description: clientID is the oauth client ID
                              type: string
                            clientSecret:
                              description: clientSecret is a required reference to the
                                secret by name containing the oauth client secret. The
                                key "clientSecret" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            url:
                              description: url is the oauth server base URL
                              type: string
                          required:
                          - clientID
                          - clientSecret
                          - url
                          type: object
                        google:
                          description: google enables user authentication using Google
                            credentials
                          properties:
                            clientID:
                              description: clientID is the oauth client ID
                              type: string
                            clientSecret:
                              description: clientSecret is a required reference to the
                                secret by name containing the oauth client secret. The
                                key "clientSecret" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            hostedDomain:
                              description: hostedDomain is the optional Google App domain
                                (e.g. "mycompany.com") to restrict logins to
                              type: string
                          required:
                          - clientID
                          - clientSecret
                          type: object
                        htpasswd:
                          description: htpasswd enables user authentication using an HTPasswd
                            file to validate credentials
                          properties:
                            fileData:
                              description: fileData is a required reference to a secret
                                by name containing the data to use as the htpasswd file.
                                The key "htpasswd" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. If the specified htpasswd data is not
                                valid, the identity provider is not honored. The namespace
                                for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - fileData
                          type: object
                        keystone:
                          description: keystone enables user authentication using keystone
                            password credentials
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            domainName:
                              description: domainName is required for keystone v3
                              type: string
                            tlsClientCert:
                              description: tlsClientCert is an optional reference to a
                                secret by name that contains the PEM-encoded TLS client
                                certificate to present when connecting to the server.
                                The key "tls.crt" is used to locate the data. If specified
                                and the secret or expected key is not found, the identity
                                provider is not honored. If the specified certificate
                                data is not valid, the identity provider is not honored.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            tlsClientKey:
                              description: tlsClientKey is an optional reference to a
                                secret by name that contains the PEM-encoded TLS private
                                key for the client certificate referenced in tlsClientCert.
                                The key "tls.key" is used to locate the data. If specified
                                and the secret or expected key is not found, the identity
                                provider is not honored. If the specified certificate
                                data is not valid, the identity provider is not honored.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            url:
                              description: url is the remote URL to connect to
                              type: string
                            useUsernameIdentity:
                              description: useUsernameIdentity indicates that users should
                                be authenticated by username, not keystone ID DEPRECATED
                                - only use this option for legacy systems to ensure backwards
                                compatibility
                              type: boolean
                          required:
                          - url
                          - domainName
                          type: object
                        ldap:
                          description: ldap enables user authentication using LDAP credentials
                          properties:
                            attributes:
                              description: attributes maps LDAP attributes to identities
                              properties:
                                email:
                                  description: email is the list of attributes whose values
                                    should be used as the email address. Optional. If
                                    unspecified, no email is set for the identity
                                  items:
                                    type: string
                                  type: array
                                id:
                                  description: id is the list of attributes whose values
                                    should be used as the user ID. Required. First non-empty
                                    attribute is used. At least one attribute is required.
                                    If none of the listed attribute have a value, authentication
                                    fails. LDAP standard identity attribute is "dn"
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: name is the list of attributes whose values
                                    should be used as the display name. Optional. If unspecified,
                                    no display name is set for the identity LDAP standard
                                    display name attribute is "cn"
                                  items:
                                    type: string
                                  type: array
                                preferredUsername:
                                  description: preferredUsername is the list of attributes
                                    whose values should be used as the preferred username.
                                    LDAP standard login attribute is "uid"
                                  items:
                                    type: string
                                  type: array
                              required:
                              - id
                              type: object
                            bindDN:
                              description: bindDN is an optional DN to bind with during
                                the search phase.
                              type: string
                            bindPassword:
                              description: bindPassword is an optional reference to a
                                secret by name containing a password to bind with during
                                the search phase. The key "bindPassword" is used to locate
                                the data. If specified and the secret or expected key
                                is not found, the identity provider is not honored. The
                                namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            insecure:
                              description: 'insecure, if true, indicates the connection
                                should not use TLS WARNING: Should not be set to `true`
                                with the URL scheme "ldaps://" as "ldaps://" URLs always          attempt
                                to connect using TLS, even when `insecure` is set to `true`
                                When `true`, "ldap://" URLS connect insecurely. When `false`,
                                "ldap://" URLs are upgraded to a TLS connection using
                                StartTLS as specified in https://tools.ietf.org/html/rfc2830.'
                              type: boolean
                            url:
                              description: 'url is an RFC 2255 URL which specifies the
                                LDAP search parameters to use. The syntax of the URL is:
                                ldap://host:port/basedn?attribute?scope?filter'
                              type: string
                          required:
                          - url
                          - insecure
                          - attributes
                          type: object
                        login:
                          description: login indicates whether to use this identity provider
                            for unauthenticated browsers to login against
                          type: boolean
                        mappingMethod:
                          description: mappingMethod determines how identities from this
                            provider are mapped to users Defaults to "claim"
                          type: string
                        name:
                          description: 'name is used to qualify the identities returned
                            by this provider. - It MUST be unique and not shared by any
                            other identity provider used - It MUST be a valid path segment:
                            name cannot equal "." or ".." or contain "/" or "%" or ":"   Ref:
                            https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName'
                          type: string
                        openID:
                          description: openID enables user authentication using OpenID
                            credentials
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            claims:
                              description: claims mappings
                              properties:
                                email:
                                  description: email is the list of claims whose values
                                    should be used as the email address. Optional. If
                                    unspecified, no email is set for the identity
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: name is the list of claims whose values
                                    should be used as the display name. Optional. If unspecified,
                                    no display name is set for the identity
                                  items:
                                    type: string
                                  type: array
                                preferredUsername:
                                  description: preferredUsername is the list of claims
                                    whose values should be used as the preferred username.
                                    If unspecified, the preferred username is determined
                                    from the value of the sub claim
                                  items:
                                    type: string
                                  type: array
                              type: object
                            clientID:
                              description: clientID is the oauth client ID
                              type: string
                            clientSecret:
                              description: clientSecret is a required reference to the
                                secret by name containing the oauth client secret. The
                                key "clientSecret" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            extraAuthorizeParameters:
                              description: extraAuthorizeParameters are any custom parameters
                                to add to the authorize request.
                              type: object
                            extraScopes:
                              description: extraScopes are any scopes to request in addition
                                to the standard "openid" scope.
                              items:
                                type: string
                              type: array
                            urls:
                              description: urls to use to authenticate
                              properties:
                                authorize:
                                  description: authorize is the oauth authorization URL
                                  type: string
                                token:
                                  description: token is the oauth token granting URL
                                  type: string
                                userInfo:
                                  description: userInfo is the optional userinfo URL.
                                    If present, a granted access_token is used to request
                                    claims If empty, a granted id_token is parsed for
                                    claims
                                  type: string
                              required:
                              - authorize
                              - token
                              type: object
                          required:
                          - clientID
                          - clientSecret
                          - urls
                          - claims
                          type: object
                        requestHeader:
                          description: requestHeader enables user authentication using
                            request header credentials
                          properties:
                            ca:
                              description: ca is a required reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. Specifically, it allows verification
                                of incoming requests to prevent header spoofing. The key
                                "ca.crt" is used to locate the data. If the config map
                                or expected key is not found, the identity provider is
                                not honored. If the specified ca data is not valid, the
                                identity provider is not honored. The namespace for this
                                config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            challengeURL:
                              description: challengeURL is a URL to redirect unauthenticated
                                /authorize requests to Unauthenticated requests from OAuth
                                clients which expect WWW-Authenticate challenges will
                                be redirected here. ${url} is replaced with the current
                                URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url}
                                ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}
                                Required when challenge is set to true.
                              type: string
                            clientCommonNames:
                              description: clientCommonNames is an optional list of common
                                names to require a match from. If empty, any client certificate
                                validated against the clientCA bundle is considered authoritative.
                              items:
                                type: string
                              type: array
                            emailHeaders:
                              description: emailHeaders is the set of headers to check
                                for the email address
                              items:
                                type: string
                              type: array
                            headers:
                              description: headers is the set of headers to check for
                                identity information
                              items:
                                type: string
                              type: array
                            loginURL:
                              description: loginURL is a URL to redirect unauthenticated
                                /authorize requests to Unauthenticated requests from OAuth
                                clients which expect interactive logins will be redirected
                                here ${url} is replaced with the current URL, escaped
                                to be safe in a query parameter   https://www.example.com/sso-login?then=${url}
                                ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}
                                Required when login is set to true.
                              type: string
                            nameHeaders:
                              description: nameHeaders is the set of headers to check
                                for the display name
                              items:
                                type: string
                              type: array
                            preferredUsernameHeaders:
                              description: preferredUsernameHeaders is the set of headers
                                to check for the preferred username
                              items:
                                type: string
                              type: array
                          required:
                          - loginURL
                          - challengeURL
                          - ca
                          - headers
                          - preferredUsernameHeaders
                          - nameHeaders
                          - emailHeaders
                          type: object
                        type:
                          description: type identifies the identity provider type for
                            this entry.
                          type: string
                      required:
                      - name
                      - challenge
                      - login
                      - type
                      type: object
                    type: array
                required:
                - identityProviders
                - clusterDeploymentRefs
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ''
          plural: ''
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: '1.0'
        name: hiveconfigs.hive.openshift.io
      spec:
        group: hive.openshift.io
        names:
          kind: HiveConfig
          plural: hiveconfigs
        scope: Cluster
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  logLevel:
                    description: logLevel is an intent based logging for an overall component.  It
                      does not give fine grained control, but it is a simple way to manage
                      coarse grained logging choices that operators have to interpret
                      for their operands.
                    type: string
                  managementState:
                    description: managementState indicates whether and how the operator
                      should manage the component
                    type: string
                  observedConfig:
                    description: observedConfig holds a sparse config that controller
                      has observed from the cluster state.  It exists in spec because
                      it is an input to the level for the operator
                    type: object
                  operandSpecs:
                    description: operandSpecs provide customization for functional units
                      within the component
                    items:
                      properties:
                        name:
                          description: name is the name of this unit.  The operator must
                            be aware of it.
                          type: string
                        operandContainerSpecs:
                          description: operandContainerSpecs are per-container options
                          items:
                            properties:
                              name:
                                description: name is the name of the container to modify
                                type: string
                              resources:
                                description: resources are the requests and limits to
                                  place in the container.  Nil means to accept the defaults.
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        unsupportedResourcePatches:
                          description: 'unsupportedResourcePatches are applied to the
                            workload resource for this unit. This is an unsupported workaround
                            if anything needs to be modified on the workload that is not
                            otherwise configurable. TODO Decide: alternatively, we could
                            simply include a RawExtension which is used in place of the
                            "normal" default manifest'
                          items:
                            properties:
                              patch:
                                description: patch the patch itself
                                type: string
                              type:
                                description: 'type is the type of patch to apply: jsonmerge,
                                  strategicmerge'
                                type: string
                            required:
                            - type
                            - patch
                            type: object
                          type: array
                      required:
                      - name
                      - operandContainerSpecs
                      - unsupportedResourcePatches
                      type: object
                    type: array
                  unsupportedConfigOverrides:
                    description: 'unsupportedConfigOverrides holds a sparse config that
                      will override any previously set options.  It only needs to be the
                      fields to override it will end up overlaying in the following order:
                      1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                    type: object
                required:
                - managementState
                - logLevel
                - operandSpecs
                - unsupportedConfigOverrides
                - observedConfig
                type: object
              status:
                properties:
                  conditions:
                    description: conditions is a list of conditions and their status
                    items:
                      properties:
                        lastTransitionTime:
                          format: date-time
                          type: string
                        message:
                          type: string
                        reason:
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  generations:
                    description: generations are used to determine when an item needs
                      to be reconciled or has changed in a way that needs a reaction.
                    items:
                      properties:
                        group:
                          description: group is the group of the thing you're tracking
                          type: string
                        hash:
                          description: hash is an optional field set for resources without
                            generation that are content sensitive like secrets and configmaps
                          type: string
                        lastGeneration:
                          description: lastGeneration is the last generation of the workload
                            controller involved
                          format: int64
                          type: integer
                        name:
                          description: name is the name of the thing you're tracking
                          type: string
                        namespace:
                          description: namespace is where the thing you're tracking is
                          type: string
                        resource:
                          description: resource is the resource type of the thing you're
                            tracking
                          type: string
                      required:
                      - group
                      - resource
                      - namespace
                      - name
                      - lastGeneration
                      - hash
                      type: object
                    type: array
                  observedGeneration:
                    description: observedGeneration is the last generation change you've
                      dealt with
                    format: int64
                    type: integer
                  readyReplicas:
                    description: readyReplicas indicates how many replicas are ready and
                      at the desired state
                    format: int32
                    type: integer
                  version:
                    description: version is the level this availability applies to
                    type: string
                required:
                - version
                - readyReplicas
                - generations
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ''
          plural: ''
        conditions: []
        storedVersions: []
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          controller-tools.k8s.io: '1.0'
        name: selectorsyncidentityproviders.hive.openshift.io
      spec:
        group: hive.openshift.io
        names:
          kind: SelectorSyncIdentityProvider
          plural: selectorsyncidentityproviders
        scope: Cluster
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterDeploymentSelector:
                    description: ClusterDeploymentSelector is a LabelSelector indicating
                      which clusters the SelectorIdentityProvider applies to in any namespace.
                    type: object
                  identityProviders:
                    description: IdentityProviders is an ordered list of ways for a user
                      to identify themselves
                    items:
                      properties:
                        basicAuth:
                          description: basicAuth contains configuration options for the
                            BasicAuth IdP
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            tlsClientCert:
                              description: tlsClientCert is an optional reference to a
                                secret by name that contains the PEM-encoded TLS client
                                certificate to present when connecting to the server.
                                The key "tls.crt" is used to locate the data. If specified
                                and the secret or expected key is not found, the identity
                                provider is not honored. If the specified certificate
                                data is not valid, the identity provider is not honored.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            tlsClientKey:
                              description: tlsClientKey is an optional reference to a
                                secret by name that contains the PEM-encoded TLS private
                                key for the client certificate referenced in tlsClientCert.
                                The key "tls.key" is used to locate the data. If specified
                                and the secret or expected key is not found, the identity
                                provider is not honored. If the specified certificate
                                data is not valid, the identity provider is not honored.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            url:
                              description: url is the remote URL to connect to
                              type: string
                          required:
                          - url
                          type: object
                        challenge:
                          description: challenge indicates whether to issue WWW-Authenticate
                            challenges for this provider
                          type: boolean
                        github:
                          description: github enables user authentication using GitHub
                            credentials
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. This can only be configured when hostname is set
                                to a non-empty value. The namespace for this config map
                                is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            clientID:
                              description: clientID is the oauth client ID
                              type: string
                            clientSecret:
                              description: clientSecret is a required reference to the
                                secret by name containing the oauth client secret. The
                                key "clientSecret" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            hostname:
                              description: hostname is the optional domain (e.g. "mycompany.com")
                                for use with a hosted instance of GitHub Enterprise. It
                                must match the GitHub Enterprise settings value configured
                                at /setup/settings#hostname.
                              type: string
                            organizations:
                              description: organizations optionally restricts which organizations
                                are allowed to log in
                              items:
                                type: string
                              type: array
                            teams:
                              description: teams optionally restricts which teams are
                                allowed to log in. Format is <org>/<team>.
                              items:
                                type: string
                              type: array
                          required:
                          - clientID
                          - clientSecret
                          type: object
                        gitlab:
                          description: gitlab enables user authentication using GitLab
                            credentials
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            clientID:
                              description: clientID is the oauth client ID
                              type: string
                            clientSecret:
                              description: clientSecret is a required reference to the
                                secret by name containing the oauth client secret. The
                                key "clientSecret" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            url:
                              description: url is the oauth server base URL
                              type: string
                          required:
                          - clientID
                          - clientSecret
                          - url
                          type: object
                        google:
                          description: google enables user authentication using Google
                            credentials
                          properties:
                            clientID:
                              description: clientID is the oauth client ID
                              type: string
                            clientSecret:
                              description: clientSecret is a required reference to the
                                secret by name containing the oauth client secret. The
                                key "clientSecret" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            hostedDomain:
                              description: hostedDomain is the optional Google App domain
                                (e.g. "mycompany.com") to restrict logins to
                              type: string
                          required:
                          - clientID
                          - clientSecret
                          type: object
                        htpasswd:
                          description: htpasswd enables user authentication using an HTPasswd
                            file to validate credentials
                          properties:
                            fileData:
                              description: fileData is a required reference to a secret
                                by name containing the data to use as the htpasswd file.
                                The key "htpasswd" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. If the specified htpasswd data is not
                                valid, the identity provider is not honored. The namespace
                                for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - fileData
                          type: object
                        keystone:
                          description: keystone enables user authentication using keystone
                            password credentials
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            domainName:
                              description: domainName is required for keystone v3
                              type: string
                            tlsClientCert:
                              description: tlsClientCert is an optional reference to a
                                secret by name that contains the PEM-encoded TLS client
                                certificate to present when connecting to the server.
                                The key "tls.crt" is used to locate the data. If specified
                                and the secret or expected key is not found, the identity
                                provider is not honored. If the specified certificate
                                data is not valid, the identity provider is not honored.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            tlsClientKey:
                              description: tlsClientKey is an optional reference to a
                                secret by name that contains the PEM-encoded TLS private
                                key for the client certificate referenced in tlsClientCert.
                                The key "tls.key" is used to locate the data. If specified
                                and the secret or expected key is not found, the identity
                                provider is not honored. If the specified certificate
                                data is not valid, the identity provider is not honored.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            url:
                              description: url is the remote URL to connect to
                              type: string
                            useUsernameIdentity:
                              description: useUsernameIdentity indicates that users should
                                be authenticated by username, not keystone ID DEPRECATED
                                - only use this option for legacy systems to ensure backwards
                                compatibility
                              type: boolean
                          required:
                          - url
                          - domainName
                          type: object
                        ldap:
                          description: ldap enables user authentication using LDAP credentials
                          properties:
                            attributes:
                              description: attributes maps LDAP attributes to identities
                              properties:
                                email:
                                  description: email is the list of attributes whose values
                                    should be used as the email address. Optional. If
                                    unspecified, no email is set for the identity
                                  items:
                                    type: string
                                  type: array
                                id:
                                  description: id is the list of attributes whose values
                                    should be used as the user ID. Required. First non-empty
                                    attribute is used. At least one attribute is required.
                                    If none of the listed attribute have a value, authentication
                                    fails. LDAP standard identity attribute is "dn"
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: name is the list of attributes whose values
                                    should be used as the display name. Optional. If unspecified,
                                    no display name is set for the identity LDAP standard
                                    display name attribute is "cn"
                                  items:
                                    type: string
                                  type: array
                                preferredUsername:
                                  description: preferredUsername is the list of attributes
                                    whose values should be used as the preferred username.
                                    LDAP standard login attribute is "uid"
                                  items:
                                    type: string
                                  type: array
                              required:
                              - id
                              type: object
                            bindDN:
                              description: bindDN is an optional DN to bind with during
                                the search phase.
                              type: string
                            bindPassword:
                              description: bindPassword is an optional reference to a
                                secret by name containing a password to bind with during
                                the search phase. The key "bindPassword" is used to locate
                                the data. If specified and the secret or expected key
                                is not found, the identity provider is not honored. The
                                namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            insecure:
                              description: 'insecure, if true, indicates the connection
                                should not use TLS WARNING: Should not be set to `true`
                                with the URL scheme "ldaps://" as "ldaps://" URLs always          attempt
                                to connect using TLS, even when `insecure` is set to `true`
                                When `true`, "ldap://" URLS connect insecurely. When `false`,
                                "ldap://" URLs are upgraded to a TLS connection using
                                StartTLS as specified in https://tools.ietf.org/html/rfc2830.'
                              type: boolean
                            url:
                              description: 'url is an RFC 2255 URL which specifies the
                                LDAP search parameters to use. The syntax of the URL is:
                                ldap://host:port/basedn?attribute?scope?filter'
                              type: string
                          required:
                          - url
                          - insecure
                          - attributes
                          type: object
                        login:
                          description: login indicates whether to use this identity provider
                            for unauthenticated browsers to login against
                          type: boolean
                        mappingMethod:
                          description: mappingMethod determines how identities from this
                            provider are mapped to users Defaults to "claim"
                          type: string
                        name:
                          description: 'name is used to qualify the identities returned
                            by this provider. - It MUST be unique and not shared by any
                            other identity provider used - It MUST be a valid path segment:
                            name cannot equal "." or ".." or contain "/" or "%" or ":"   Ref:
                            https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName'
                          type: string
                        openID:
                          description: openID enables user authentication using OpenID
                            credentials
                          properties:
                            ca:
                              description: ca is an optional reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. The key "ca.crt" is used to locate
                                the data. If specified and the config map or expected
                                key is not found, the identity provider is not honored.
                                If the specified ca data is not valid, the identity provider
                                is not honored. If empty, the default system roots are
                                used. The namespace for this config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            claims:
                              description: claims mappings
                              properties:
                                email:
                                  description: email is the list of claims whose values
                                    should be used as the email address. Optional. If
                                    unspecified, no email is set for the identity
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: name is the list of claims whose values
                                    should be used as the display name. Optional. If unspecified,
                                    no display name is set for the identity
                                  items:
                                    type: string
                                  type: array
                                preferredUsername:
                                  description: preferredUsername is the list of claims
                                    whose values should be used as the preferred username.
                                    If unspecified, the preferred username is determined
                                    from the value of the sub claim
                                  items:
                                    type: string
                                  type: array
                              type: object
                            clientID:
                              description: clientID is the oauth client ID
                              type: string
                            clientSecret:
                              description: clientSecret is a required reference to the
                                secret by name containing the oauth client secret. The
                                key "clientSecret" is used to locate the data. If the
                                secret or expected key is not found, the identity provider
                                is not honored. The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    secret
                                  type: string
                              required:
                              - name
                              type: object
                            extraAuthorizeParameters:
                              description: extraAuthorizeParameters are any custom parameters
                                to add to the authorize request.
                              type: object
                            extraScopes:
                              description: extraScopes are any scopes to request in addition
                                to the standard "openid" scope.
                              items:
                                type: string
                              type: array
                            urls:
                              description: urls to use to authenticate
                              properties:
                                authorize:
                                  description: authorize is the oauth authorization URL
                                  type: string
                                token:
                                  description: token is the oauth token granting URL
                                  type: string
                                userInfo:
                                  description: userInfo is the optional userinfo URL.
                                    If present, a granted access_token is used to request
                                    claims If empty, a granted id_token is parsed for
                                    claims
                                  type: string
                              required:
                              - authorize
                              - token
                              type: object
                          required:
                          - clientID
                          - clientSecret
                          - urls
                          - claims
                          type: object
                        requestHeader:
                          description: requestHeader enables user authentication using
                            request header credentials
                          properties:
                            ca:
                              description: ca is a required reference to a config map
                                by name containing the PEM-encoded CA bundle. It is used
                                as a trust anchor to validate the TLS certificate presented
                                by the remote server. Specifically, it allows verification
                                of incoming requests to prevent header spoofing. The key
                                "ca.crt" is used to locate the data. If the config map
                                or expected key is not found, the identity provider is
                                not honored. If the specified ca data is not valid, the
                                identity provider is not honored. The namespace for this
                                config map is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced
                                    config map
                                  type: string
                              required:
                              - name
                              type: object
                            challengeURL:
                              description: challengeURL is a URL to redirect unauthenticated
                                /authorize requests to Unauthenticated requests from OAuth
                                clients which expect WWW-Authenticate challenges will
                                be redirected here. ${url} is replaced with the current
                                URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url}
                                ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}
                                Required when challenge is set to true.
                              type: string
                            clientCommonNames:
                              description: clientCommonNames is an optional list of common
                                names to require a match from. If empty, any client certificate
                                validated against the clientCA bundle is considered authoritative.
                              items:
                                type: string
                              type: array
                            emailHeaders:
                              description: emailHeaders is the set of headers to check
                                for the email address
                              items:
                                type: string
                              type: array
                            headers:
                              description: headers is the set of headers to check for
                                identity information
                              items:
                                type: string
                              type: array
                            loginURL:
                              description: loginURL is a URL to redirect unauthenticated
                                /authorize requests to Unauthenticated requests from OAuth
                                clients which expect interactive logins will be redirected
                                here ${url} is replaced with the current URL, escaped
                                to be safe in a query parameter   https://www.example.com/sso-login?then=${url}
                                ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}
                                Required when login is set to true.
                              type: string
                            nameHeaders:
                              description: nameHeaders is the set of headers to check
                                for the display name
                              items:
                                type: string
                              type: array
                            preferredUsernameHeaders:
                              description: preferredUsernameHeaders is the set of headers
                                to check for the preferred username
                              items:
                                type: string
                              type: array
                          required:
                          - loginURL
                          - challengeURL
                          - ca
                          - headers
                          - preferredUsernameHeaders
                          - nameHeaders
                          - emailHeaders
                          type: object
                        type:
                          description: type identifies the identity provider type for
                            this entry.
                          type: string
                      required:
                      - name
                      - challenge
                      - login
                      - type
                      type: object
                    type: array
                required:
                - identityProviders
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ''
          plural: ''
        conditions: []
        storedVersions: []
  packages: |
    - channels:
      - currentCSV: hive-operator-0.0.1
        name: alpha
      packageName: hive-operator
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"clusterServiceVersions":"- apiVersion: operators.coreos.com/v1alpha1\n  kind: ClusterServiceVersion\n  metadata:\n    annotations:\n      categories: A list of comma separated categories that your operator falls under.\n      certified: 'false'\n      containerImage: quay.io/dgoodwin/hive:latest\n      createdAt: '2019-03-06T14:51:38Z'\n      description: OpenShift cluster provisioning and management at scale.\n      support: Devan Goodwin\n    name: hive-operator-0.0.1\n    namespace: placeholder\n  spec:\n    customresourcedefinitions:\n      owned:\n      - description: Configuration for the Hive Operator\n        displayName: Hive Config\n        kind: HiveConfig\n        name: hiveconfigs.hive.openshift.io\n        version: v1alpha1\n      - description: Defines an OpenShift cluster to be created.\n        displayName: Cluster Deployment\n        kind: ClusterDeployment\n        name: clusterdeployments.hive.openshift.io\n        version: v1alpha1\n      - description: Defines a DNSZone to be managed in a cloud provider.\n        displayName: DNS Zone\n        kind: DNSZone\n        name: dnszones.hive.openshift.io\n        version: v1alpha1\n    description: |-\n      OpenShift cluster provisioning and management at scale.\n    displayName: Hive\n    install:\n      spec:\n        clusterPermissions:\n        - rules:\n          - apiGroups:\n            - ''\n            resources:\n            - serviceaccounts\n            - serviceaccounts/finalizers\n            - secrets\n            - secrets/finalizers\n            - services\n            - services/finalizers\n            - events\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - apiextensions.k8s.io\n            resources:\n            - customresourcedefinitions\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - apiregistration.k8s.io\n            resources:\n            - apiservices\n            - apiservices/finalizers\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - admissionregistration.k8s.io\n            resources:\n            - validatingwebhookconfigurations\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - apps\n            resources:\n            - deployments\n            - deployments/finalizers\n            - daemonsets\n            - daemonsets/finalizers\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - apps.openshift.io\n            resources:\n            - deploymentconfigs\n            - deploymentconfigs/finalizers\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - hive.openshift.io\n            resources:\n            - hiveconfigs\n            - hiveconfigs/finalizers\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          serviceAccountName: hive-operator\n        - rules:\n          - apiGroups:\n            - batch\n            resources:\n            - jobs\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - ''\n            resources:\n            - serviceaccounts\n            - secrets\n            - configmaps\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - rbac.authorization.k8s.io\n            resources:\n            - roles\n            - rolebindings\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - hive.openshift.io\n            resources:\n            - clusterdeployments\n            - clusterdeployments/status\n            - clusterdeployments/finalizers\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - hive.openshift.io\n            resources:\n            - clusterimagesets\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - hive.openshift.io\n            resources:\n            - clusterimagesets/status\n            verbs:\n            - get\n            - update\n            - patch\n          - apiGroups:\n            - hive.openshift.io\n            resources:\n            - dnszones\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - apiextensions.k8s.io\n            resources:\n            - customresourcedefinitions\n            verbs:\n            - get\n            - list\n            - watch\n          - apiGroups:\n            - clusterregistry.k8s.io\n            resources:\n            - clusters\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          - apiGroups:\n            - core.federation.k8s.io\n            resources:\n            - federatedclusters\n            verbs:\n            - get\n            - list\n            - watch\n            - create\n            - update\n            - patch\n            - delete\n          serviceAccountName: hive-controllers\n        - rules:\n          - apiGroups:\n            - admission.hive.openshift.io\n            resources:\n            - dnszones\n            verbs:\n            - get\n            - list\n            - watch\n          - apiGroups:\n            - ''\n            resources:\n            - configmaps\n            verbs:\n            - get\n          - apiGroups:\n            - admissionregistration.k8s.io\n            resources:\n            - validatingwebhookconfigurations\n            - mutatingwebhookconfigurations\n            verbs:\n            - get\n            - list\n            - watch\n          - apiGroups:\n            - ''\n            resources:\n            - namespaces\n            verbs:\n            - get\n            - list\n            - watch\n          serviceAccountName: hiveadmission\n        deployments:\n        - name: hive-operator\n          spec:\n            replicas: 1\n            revisionHistoryLimit: 4\n            selector:\n              matchLabels:\n                control-plane: hive-operator\n                controller-tools.k8s.io: '1.0'\n            template:\n              metadata:\n                labels:\n                  control-plane: hive-operator\n                  controller-tools.k8s.io: '1.0'\n              spec:\n                containers:\n                - command:\n                  - /opt/services/hive-operator\n                  - --log-level\n                  - debug\n                  image: quay.io/dgoodwin/hive:5f9f2d45\n                  imagePullPolicy: Always\n                  name: hive-operator\n                  resources:\n                    limits:\n                      cpu: 100m\n                      memory: 256Mi\n                    requests:\n                      cpu: 100m\n                      memory: 75Mi\n                serviceAccountName: hive-operator\n                terminationGracePeriodSeconds: 10\n      strategy: deployment\n    installModes:\n    - supported: true\n      type: OwnNamespace\n    - supported: true\n      type: SingleNamespace\n    - supported: true\n      type: MultiNamespace\n    - supported: true\n      type: AllNamespaces\n    keywords:\n    - kubernetes\n    - openshift\n    - multi-cluster\n    - cluster\n    maturity: alpha\n    provider:\n      name: Red Hat, Inc\n    version: 0.0.1\n","customResourceDefinitions":"- apiVersion: apiextensions.k8s.io/v1beta1\n  kind: CustomResourceDefinition\n  metadata:\n    creationTimestamp: null\n    labels:\n      controller-tools.k8s.io: '1.0'\n    name: selectorsyncsets.hive.openshift.io\n  spec:\n    group: hive.openshift.io\n    names:\n      kind: SelectorSyncSet\n      plural: selectorsyncsets\n    scope: Cluster\n    validation:\n      openAPIV3Schema:\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              clusterDeploymentSelector:\n                description: ClusterDeploymentSelector is a LabelSelector indicating\n                  which clusters the SelectorSyncSet applies to in any namespace.\n                type: object\n              patches:\n                description: Patches is the list of patches to apply.\n                items:\n                  properties:\n                    groupVersionKind:\n                      description: GroupVersionKind is the Group, Version and Kind\n                        of the object to be patched.\n                      type: object\n                    name:\n                      description: Name is the name of the object to be patched.\n                      type: string\n                    namespace:\n                      description: Namespace is the Namespace in which the object\n                        to patch exists. Defaults to the SyncSet's Namespace.\n                      type: string\n                    patch:\n                      description: Patch is the patch to apply.\n                      format: byte\n                      type: string\n                    patchType:\n                      description: PatchType indicates the PatchType as \"json\" (default),\n                        \"merge\" or \"strategic\".\n                      type: string\n                  required:\n                  - groupVersionKind\n                  - name\n                  - patch\n                  type: object\n                type: array\n              resourceApplyMode:\n                description: ResourceApplyMode indicates if the resource apply mode\n                  is \"upsert\" (default) or \"sync\". ApplyMode \"upsert\" indicates create\n                  and update. ApplyMode \"sync\" indicates create, update and delete.\n                type: string\n              resources:\n                description: Resources is the list of objects to sync.\n                items:\n                  type: object\n                type: array\n            type: object\n          status:\n            type: object\n    version: v1alpha1\n  status:\n    acceptedNames:\n      kind: ''\n      plural: ''\n    conditions: []\n    storedVersions: []\n- apiVersion: apiextensions.k8s.io/v1beta1\n  kind: CustomResourceDefinition\n  metadata:\n    creationTimestamp: null\n    labels:\n      controller-tools.k8s.io: '1.0'\n    name: clusterimagesets.hive.openshift.io\n  spec:\n    additionalPrinterColumns:\n    - JSONPath: .spec.hiveImage\n      name: Hive\n      type: string\n    - JSONPath: .status.installerImage\n      name: Installer\n      type: string\n    - JSONPath: .spec.releaseImage\n      name: Release\n      type: string\n    group: hive.openshift.io\n    names:\n      kind: ClusterImageSet\n      plural: clusterimagesets\n      shortNames:\n      - imgset\n    scope: Cluster\n    subresources:\n      status: {}\n    validation:\n      openAPIV3Schema:\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              hiveImage:\n                description: HiveImage is the Hive image to use when installing or\n                  destroying a cluster. If not present, the default Hive image for\n                  the clusterdeployment controller is used.\n                type: string\n              installerImage:\n                description: InstallerImage is the image used to install a cluster.\n                  If not specified, the installer image reference is obtained from\n                  the release image.\n                type: string\n              releaseImage:\n                description: ReleaseImage is the image that contains the payload to\n                  use when installing a cluster. If the installer image is specified,\n                  the release image is optional.\n                type: string\n            type: object\n          status:\n            type: object\n    version: v1alpha1\n  status:\n    acceptedNames:\n      kind: ''\n      plural: ''\n    conditions: []\n    storedVersions: []\n- apiVersion: apiextensions.k8s.io/v1beta1\n  kind: CustomResourceDefinition\n  metadata:\n    creationTimestamp: null\n    labels:\n      controller-tools.k8s.io: '1.0'\n    name: clusterdeployments.hive.openshift.io\n  spec:\n    additionalPrinterColumns:\n    - JSONPath: .spec.baseDomain\n      name: BaseDomain\n      type: string\n    - JSONPath: .status.installed\n      name: Installed\n      type: boolean\n    - JSONPath: .metadata.creationTimestamp\n      name: Age\n      type: date\n    group: hive.openshift.io\n    names:\n      kind: ClusterDeployment\n      plural: clusterdeployments\n      shortNames:\n      - cd\n    scope: Namespaced\n    subresources:\n      status: {}\n    validation:\n      openAPIV3Schema:\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              baseDomain:\n                description: BaseDomain is the base domain to which the cluster should\n                  belong.\n                type: string\n              clusterName:\n                description: ClusterName is the friendly name of the cluster. It is\n                  used for subdomains, some resource tagging, and other instances\n                  where a friendly name for the cluster is useful.\n                type: string\n              compute:\n                description: Compute is the list of MachinePools containing compute\n                  nodes that need to be installed.\n                items:\n                  properties:\n                    labels:\n                      description: Map of label string keys and values that will be\n                        applied to the created MachineSet's MachineSpec. This list\n                        will overwrite any modifications made to Node labels on an\n                        ongoing basis.\n                      type: object\n                    name:\n                      description: Name is the name of the machine pool.\n                      type: string\n                    platform:\n                      description: Platform is configuration for machine pool specific\n                        to the platfrom.\n                      properties:\n                        aws:\n                          description: AWS is the configuration used when installing\n                            on AWS.\n                          properties:\n                            rootVolume:\n                              description: EC2RootVolume defines the storage for ec2\n                                instance.\n                              properties:\n                                iops:\n                                  description: IOPS defines the iops for the instance.\n                                  format: int64\n                                  type: integer\n                                size:\n                                  description: Size defines the size of the instance.\n                                  format: int64\n                                  type: integer\n                                type:\n                                  description: Type defines the type of the instance.\n                                  type: string\n                              required:\n                              - iops\n                              - size\n                              - type\n                              type: object\n                            type:\n                              description: InstanceType defines the ec2 instance type.\n                                eg. m4-large\n                              type: string\n                            zones:\n                              description: Zones is list of availability zones that\n                                can be used.\n                              items:\n                                type: string\n                              type: array\n                          required:\n                          - type\n                          - rootVolume\n                          type: object\n                        libvirt:\n                          description: Libvirt is the configuration used when installing\n                            on libvirt.\n                          properties:\n                            image:\n                              description: Image is the URL to the OS image. E.g.\n                                \"http://aos-ostree.rhev-ci-vms.eng.rdu2.redhat.com/rhcos/images/cloud/latest/rhcos-qemu.qcow2.gz\"\n                              type: string\n                            imagePool:\n                              description: ImagePool is the name of the libvirt storage\n                                pool to which the storage volume containing the OS\n                                image belongs.\n                              type: string\n                            imageVolume:\n                              description: ImageVolume is the name of the libvirt\n                                storage volume containing the OS image.\n                              type: string\n                          required:\n                          - image\n                          type: object\n                        openstack:\n                          description: OpenStack is the configuration used when installing\n                            on OpenStack.\n                          properties:\n                            rootVolume:\n                              description: OpenStackRootVolume defines the storage\n                                for Nova instance.\n                              properties:\n                                iops:\n                                  description: IOPS defines the iops for the instance.\n                                  format: int64\n                                  type: integer\n                                size:\n                                  description: Size defines the size of the instance.\n                                  format: int64\n                                  type: integer\n                                type:\n                                  description: Type defines the type of the instance.\n                                  type: string\n                              required:\n                              - iops\n                              - size\n                              - type\n                              type: object\n                            type:\n                              description: FlavorName defines the OpenStack Nova flavor.\n                                eg. m1.large\n                              type: string\n                          required:\n                          - type\n                          - rootVolume\n                          type: object\n                      type: object\n                    replicas:\n                      description: Replicas is the count of machines for this machine\n                        pool. Default is 1.\n                      format: int64\n                      type: integer\n                    taints:\n                      description: List of taints that will be applied to the created\n                        MachineSet's MachineSpec. This list will overwrite any modifications\n                        made to Node taints on an ongoing basis.\n                      items:\n                        type: object\n                      type: array\n                  required:\n                  - name\n                  - replicas\n                  - platform\n                  type: object\n                type: array\n              controlPlane:\n                description: ControlPlane is the MachinePool containing control plane\n                  nodes that need to be installed.\n                properties:\n                  labels:\n                    description: Map of label string keys and values that will be\n                      applied to the created MachineSet's MachineSpec. This list will\n                      overwrite any modifications made to Node labels on an ongoing\n                      basis.\n                    type: object\n                  name:\n                    description: Name is the name of the machine pool.\n                    type: string\n                  platform:\n                    description: Platform is configuration for machine pool specific\n                      to the platfrom.\n                    properties:\n                      aws:\n                        description: AWS is the configuration used when installing\n                          on AWS.\n                        properties:\n                          rootVolume:\n                            description: EC2RootVolume defines the storage for ec2\n                              instance.\n                            properties:\n                              iops:\n                                description: IOPS defines the iops for the instance.\n                                format: int64\n                                type: integer\n                              size:\n                                description: Size defines the size of the instance.\n                                format: int64\n                                type: integer\n                              type:\n                                description: Type defines the type of the instance.\n                                type: string\n                            required:\n                            - iops\n                            - size\n                            - type\n                            type: object\n                          type:\n                            description: InstanceType defines the ec2 instance type.\n                              eg. m4-large\n                            type: string\n                          zones:\n                            description: Zones is list of availability zones that\n                              can be used.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                        - type\n                        - rootVolume\n                        type: object\n                      libvirt:\n                        description: Libvirt is the configuration used when installing\n                          on libvirt.\n                        properties:\n                          image:\n                            description: Image is the URL to the OS image. E.g. \"http://aos-ostree.rhev-ci-vms.eng.rdu2.redhat.com/rhcos/images/cloud/latest/rhcos-qemu.qcow2.gz\"\n                            type: string\n                          imagePool:\n                            description: ImagePool is the name of the libvirt storage\n                              pool to which the storage volume containing the OS image\n                              belongs.\n                            type: string\n                          imageVolume:\n                            description: ImageVolume is the name of the libvirt storage\n                              volume containing the OS image.\n                            type: string\n                        required:\n                        - image\n                        type: object\n                      openstack:\n                        description: OpenStack is the configuration used when installing\n                          on OpenStack.\n                        properties:\n                          rootVolume:\n                            description: OpenStackRootVolume defines the storage for\n                              Nova instance.\n                            properties:\n                              iops:\n                                description: IOPS defines the iops for the instance.\n                                format: int64\n                                type: integer\n                              size:\n                                description: Size defines the size of the instance.\n                                format: int64\n                                type: integer\n                              type:\n                                description: Type defines the type of the instance.\n                                type: string\n                            required:\n                            - iops\n                            - size\n                            - type\n                            type: object\n                          type:\n                            description: FlavorName defines the OpenStack Nova flavor.\n                              eg. m1.large\n                            type: string\n                        required:\n                        - type\n                        - rootVolume\n                        type: object\n                    type: object\n                  replicas:\n                    description: Replicas is the count of machines for this machine\n                      pool. Default is 1.\n                    format: int64\n                    type: integer\n                  taints:\n                    description: List of taints that will be applied to the created\n                      MachineSet's MachineSpec. This list will overwrite any modifications\n                      made to Node taints on an ongoing basis.\n                    items:\n                      type: object\n                    type: array\n                required:\n                - name\n                - replicas\n                - platform\n                type: object\n              imageSet:\n                description: ImageSet is a reference to a ClusterImageSet. If values\n                  are specified for Images, those will take precedence over the ones\n                  from the ClusterImageSet.\n                properties:\n                  name:\n                    description: Name is the name of the ClusterImageSet that this\n                      refers to\n                    type: string\n                required:\n                - name\n                type: object\n              images:\n                description: Images allows overriding the default images used to provision\n                  and manage the cluster.\n                properties:\n                  hiveImage:\n                    description: HiveImage is the image used in the sidecar container\n                      to manage execution of openshift-install.\n                    type: string\n                  hiveImagePullPolicy:\n                    description: HiveImagePullPolicy is the pull policy for the installer\n                      image.\n                    type: string\n                  installerImage:\n                    description: InstallerImage is the image containing the openshift-install\n                      binary that will be used to install.\n                    type: string\n                  installerImagePullPolicy:\n                    description: InstallerImagePullPolicy is the pull policy for the\n                      installer image.\n                    type: string\n                  releaseImage:\n                    description: ReleaseImage is the image containing metadata for\n                      all components that run in the cluster, and is the primary and\n                      best way to specify what specific version of OpenShift you wish\n                      to install.\n                    type: string\n                type: object\n              networking:\n                description: Networking defines the pod network provider in the cluster.\n                properties:\n                  clusterNetworks:\n                    description: ClusterNetworks is the IP address space from which\n                      to assign pod IPs.\n                    items:\n                      properties:\n                        cidr:\n                          type: string\n                        hostSubnetLength:\n                          format: int32\n                          type: integer\n                      required:\n                      - cidr\n                      - hostSubnetLength\n                      type: object\n                    type: array\n                  machineCIDR:\n                    description: MachineCIDR is the IP address space from which to\n                      assign machine IPs.\n                    type: string\n                  serviceCIDR:\n                    description: ServiceCIDR is the IP address space from which to\n                      assign service IPs.\n                    type: string\n                  type:\n                    description: Type is the network type to install\n                    type: string\n                required:\n                - machineCIDR\n                - type\n                - serviceCIDR\n                type: object\n              platform:\n                description: Platform is the configuration for the specific platform\n                  upon which to perform the installation.\n                properties:\n                  aws:\n                    description: AWS is the configuration used when installing on\n                      AWS.\n                    properties:\n                      defaultMachinePlatform:\n                        description: DefaultMachinePlatform is the default configuration\n                          used when installing on AWS for machine pools which do not\n                          define their own platform configuration.\n                        properties:\n                          rootVolume:\n                            description: EC2RootVolume defines the storage for ec2\n                              instance.\n                            properties:\n                              iops:\n                                description: IOPS defines the iops for the instance.\n                                format: int64\n                                type: integer\n                              size:\n                                description: Size defines the size of the instance.\n                                format: int64\n                                type: integer\n                              type:\n                                description: Type defines the type of the instance.\n                                type: string\n                            required:\n                            - iops\n                            - size\n                            - type\n                            type: object\n                          type:\n                            description: InstanceType defines the ec2 instance type.\n                              eg. m4-large\n                            type: string\n                          zones:\n                            description: Zones is list of availability zones that\n                              can be used.\n                            items:\n                              type: string\n                            type: array\n                        required:\n                        - type\n                        - rootVolume\n                        type: object\n                      region:\n                        description: Region specifies the AWS region where the cluster\n                          will be created.\n                        type: string\n                      userTags:\n                        description: UserTags specifies additional tags for AWS resources\n                          created for the cluster.\n                        type: object\n                    required:\n                    - region\n                    type: object\n                  libvirt:\n                    description: Libvirt is the configuration used when installing\n                      on libvirt.\n                    properties:\n                      URI:\n                        description: URI is the identifier for the libvirtd connection.  It\n                          must be reachable from both the host (where the installer\n                          is run) and the cluster (where the cluster-API controller\n                          pod will be running).\n                        type: string\n                      defaultMachinePlatform:\n                        description: DefaultMachinePlatform is the default configuration\n                          used when installing on AWS for machine pools which do not\n                          define their own platform configuration.\n                        properties:\n                          image:\n                            description: Image is the URL to the OS image. E.g. \"http://aos-ostree.rhev-ci-vms.eng.rdu2.redhat.com/rhcos/images/cloud/latest/rhcos-qemu.qcow2.gz\"\n                            type: string\n                          imagePool:\n                            description: ImagePool is the name of the libvirt storage\n                              pool to which the storage volume containing the OS image\n                              belongs.\n                            type: string\n                          imageVolume:\n                            description: ImageVolume is the name of the libvirt storage\n                              volume containing the OS image.\n                            type: string\n                        required:\n                        - image\n                        type: object\n                      masterIPs:\n                        description: MasterIPs\n                        items:\n                          format: byte\n                          type: string\n                        type: array\n                      network:\n                        description: Network\n                        properties:\n                          if:\n                            description: IfName is the name of the network interface.\n                            type: string\n                          ipRange:\n                            description: IPRange is the range of IPs to use.\n                            type: string\n                          name:\n                            description: Name is the name of the nework.\n                            type: string\n                        required:\n                        - name\n                        - if\n                        - ipRange\n                        type: object\n                    required:\n                    - URI\n                    - network\n                    - masterIPs\n                    type: object\n                type: object\n              platformSecrets:\n                description: PlatformSecrets contains credentials and secrets for\n                  the cluster infrastructure.\n                properties:\n                  aws:\n                    properties:\n                      credentials:\n                        description: Credentials refers to a secret that contains\n                          the AWS account access credentials.\n                        type: object\n                    required:\n                    - credentials\n                    type: object\n                type: object\n              preserveOnDelete:\n                description: PreserveOnDelete allows the user to disconnect a cluster\n                  from Hive without deprovisioning it\n                type: boolean\n              pullSecret:\n                description: PullSecret is the reference to the secret to use when\n                  pulling images.\n                type: object\n              sshKey:\n                description: SSHKey is the reference to the secret that contains a\n                  public key to use for access to compute instances.\n                type: object\n            required:\n            - clusterName\n            - baseDomain\n            - networking\n            - controlPlane\n            - compute\n            - platform\n            - pullSecret\n            - platformSecrets\n            type: object\n          status:\n            properties:\n              adminKubeconfigSecret:\n                description: AdminKubeconfigSecret references the secret containing\n                  the admin kubeconfig for this cluster.\n                type: object\n              adminPasswordSecret:\n                description: AdminPasswordSecret references the secret containing\n                  the admin username/password which can be used to login to this cluster.\n                type: object\n              apiURL:\n                description: APIURL is the URL where the cluster's API can be accessed.\n                type: string\n              clusterID:\n                description: ClusterID is a globally unique identifier for this cluster\n                  generated during installation. Used for reporting metrics among\n                  other places.\n                type: string\n              clusterVersionStatus:\n                description: ClusterVersionStatus will hold a copy of the remote cluster's\n                  ClusterVersion.Status\n                properties:\n                  availableUpdates:\n                    description: availableUpdates contains the list of updates that\n                      are appropriate for this cluster. This list may be empty if\n                      no updates are recommended, if the update service is unavailable,\n                      or if an invalid channel has been specified.\n                    items:\n                      properties:\n                        payload:\n                          description: payload is a container image location that\n                            contains the update. When this field is part of spec,\n                            payload is optional if version is specified and the availableUpdates\n                            field contains a matching version.\n                          type: string\n                        version:\n                          description: version is a semantic versioning identifying\n                            the update version. When this field is part of spec, version\n                            is optional if payload is specified.\n                          type: string\n                      type: object\n                    type: array\n                  conditions:\n                    description: conditions provides information about the cluster\n                      version. The condition \"Available\" is set to true if the desiredUpdate\n                      has been reached. The condition \"Progressing\" is set to true\n                      if an update is being applied. The condition \"Failing\" is set\n                      to true if an update is currently blocked by a temporary or\n                      permanent error. Conditions are only valid for the current desiredUpdate\n                      when metadata.generation is equal to status.generation.\n                    items:\n                      properties:\n                        lastTransitionTime:\n                          description: lastTransitionTime is the time of the last\n                            update to the current status object.\n                          format: date-time\n                          type: string\n                        message:\n                          description: message provides additional information about\n                            the current condition. This is only to be consumed by\n                            humans.\n                          type: string\n                        reason:\n                          description: reason is the reason for the condition's last\n                            transition.  Reasons are CamelCase\n                          type: string\n                        status:\n                          description: status of the condition, one of True, False,\n                            Unknown.\n                          type: string\n                        type:\n                          description: type specifies the state of the operator's\n                            reconciliation functionality.\n                          type: string\n                      required:\n                      - type\n                      - status\n                      - lastTransitionTime\n                      type: object\n                    type: array\n                  desired:\n                    description: desired is the version that the cluster is reconciling\n                      towards. If the cluster is not yet fully initialized desired\n                      will be set with the information available, which may be a payload\n                      or a tag.\n                    properties:\n                      payload:\n                        description: payload is a container image location that contains\n                          the update. When this field is part of spec, payload is\n                          optional if version is specified and the availableUpdates\n                          field contains a matching version.\n                        type: string\n                      version:\n                        description: version is a semantic versioning identifying\n                          the update version. When this field is part of spec, version\n                          is optional if payload is specified.\n                        type: string\n                    type: object\n                  generation:\n                    description: generation reports which version of the spec is being\n                      processed. If this value is not equal to metadata.generation,\n                      then the current and conditions fields have not yet been updated\n                      to reflect the latest request.\n                    format: int64\n                    type: integer\n                  history:\n                    description: history contains a list of the most recent versions\n                      applied to the cluster. This value may be empty during cluster\n                      startup, and then will be updated when a new update is being\n                      applied. The newest update is first in the list and it is ordered\n                      by recency. Updates in the history have state Completed if the\n                      rollout completed - if an update was failing or halfway applied\n                      the state will be Partial. Only a limited amount of update history\n                      is preserved.\n                    items:\n                      properties:\n                        completionTime:\n                          description: completionTime, if set, is when the update\n                            was fully applied. The update that is currently being\n                            applied will have a null completion time. Completion time\n                            will always be set for entries that are not the current\n                            update (usually to the started time of the next update).\n                          format: date-time\n                          type: string\n                        payload:\n                          description: payload is a container image location that\n                            contains the update. This value is always populated.\n                          type: string\n                        startedTime:\n                          description: startedTime is the time at which the update\n                            was started.\n                          format: date-time\n                          type: string\n                        state:\n                          description: state reflects whether the update was fully\n                            applied. The Partial state indicates the update is not\n                            fully applied, while the Completed state indicates the\n                            update was successfully rolled out at least once (all\n                            parts of the update successfully applied).\n                          type: string\n                        version:\n                          description: version is a semantic versioning identifying\n                            the update version. If the requested payload does not\n                            define a version, or if a failure occurs retrieving the\n                            payload, this value may be empty.\n                          type: string\n                      required:\n                      - state\n                      - startedTime\n                      - completionTime\n                      - payload\n                      type: object\n                    type: array\n                  versionHash:\n                    description: versionHash is a fingerprint of the content that\n                      the cluster will be updated with. It is used by the operator\n                      to avoid unnecessary work and is for internal use only.\n                    type: string\n                required:\n                - desired\n                - history\n                - generation\n                - versionHash\n                - conditions\n                - availableUpdates\n                type: object\n              conditions:\n                description: Conditions includes more detailed status for the cluster\n                  deployment\n                items:\n                  properties:\n                    lastProbeTime:\n                      description: LastProbeTime is the last time we probed the condition.\n                      format: date-time\n                      type: string\n                    lastTransitionTime:\n                      description: LastTransitionTime is the last time the condition\n                        transitioned from one status to another.\n                      format: date-time\n                      type: string\n                    message:\n                      description: Message is a human-readable message indicating\n                        details about last transition.\n                      type: string\n                    reason:\n                      description: Reason is a unique, one-word, CamelCase reason\n                        for the condition's last transition.\n                      type: string\n                    status:\n                      description: Status is the status of the condition.\n                      type: string\n                    type:\n                      description: Type is the type of the condition.\n                      type: string\n                  required:\n                  - type\n                  - status\n                  type: object\n                type: array\n              federated:\n                description: Federated is true if the cluster deployment has been\n                  federated with the host cluster.\n                type: boolean\n              federatedClusterRef:\n                description: FederatedClusterRef is the reference to the federated\n                  cluster resource associated with this ClusterDeployment.\n                type: object\n              infraID:\n                description: InfraID is an identifier for this cluster generated during\n                  installation and used for tagging/naming resources in cloud providers.\n                type: string\n              installed:\n                description: Installed is true if the installer job has successfully\n                  completed for this cluster.\n                type: boolean\n              installerImage:\n                description: InstallerImage is the name of the installer image to\n                  use when installing the target cluster\n                type: string\n              syncPatches:\n                description: SyncPatches is the list of SyncStatus for patches that\n                  have been applied.\n                items:\n                  properties:\n                    conditions:\n                      description: Conditions is the list of conditions indicating\n                        success or failure of object create, update and delete as\n                        well as patch application.\n                      items:\n                        properties:\n                          lastProbeTime:\n                            description: LastProbeTime is the last time we probed\n                              the condition.\n                            format: date-time\n                            type: string\n                          lastTransitionTime:\n                            description: LastTransitionTime is the last time the condition\n                              transitioned from one status to another.\n                            format: date-time\n                            type: string\n                          message:\n                            description: Message is a human-readable message indicating\n                              details about last transition.\n                            type: string\n                          reason:\n                            description: Reason is a unique, one-word, CamelCase reason\n                              for the condition's last transition.\n                            type: string\n                          status:\n                            description: Status is the status of the condition.\n                            type: string\n                          type:\n                            description: Type is the type of the condition.\n                            type: string\n                        required:\n                        - type\n                        - status\n                        type: object\n                      type: array\n                    groupVersionKind:\n                      description: GroupVersionKind is the Group, Version and Kind\n                        of the object that was synced or patched.\n                      type: object\n                    hash:\n                      description: Hash is the unique md5 hash of the resource or\n                        patch.\n                      format: byte\n                      type: string\n                    name:\n                      description: Name is the name of the object that was synced\n                        or patched.\n                      type: string\n                    namespace:\n                      description: Namespace is the Namespace of the object that was\n                        synced or patched.\n                      type: string\n                  required:\n                  - groupVersionKind\n                  - name\n                  - namespace\n                  - hash\n                  - conditions\n                  type: object\n                type: array\n              syncResources:\n                description: SyncResources is the list of SyncStatus for objects that\n                  have been synced.\n                items:\n                  properties:\n                    conditions:\n                      description: Conditions is the list of conditions indicating\n                        success or failure of object create, update and delete as\n                        well as patch application.\n                      items:\n                        properties:\n                          lastProbeTime:\n                            description: LastProbeTime is the last time we probed\n                              the condition.\n                            format: date-time\n                            type: string\n                          lastTransitionTime:\n                            description: LastTransitionTime is the last time the condition\n                              transitioned from one status to another.\n                            format: date-time\n                            type: string\n                          message:\n                            description: Message is a human-readable message indicating\n                              details about last transition.\n                            type: string\n                          reason:\n                            description: Reason is a unique, one-word, CamelCase reason\n                              for the condition's last transition.\n                            type: string\n                          status:\n                            description: Status is the status of the condition.\n                            type: string\n                          type:\n                            description: Type is the type of the condition.\n                            type: string\n                        required:\n                        - type\n                        - status\n                        type: object\n                      type: array\n                    groupVersionKind:\n                      description: GroupVersionKind is the Group, Version and Kind\n                        of the object that was synced or patched.\n                      type: object\n                    hash:\n                      description: Hash is the unique md5 hash of the resource or\n                        patch.\n                      format: byte\n                      type: string\n                    name:\n                      description: Name is the name of the object that was synced\n                        or patched.\n                      type: string\n                    namespace:\n                      description: Namespace is the Namespace of the object that was\n                        synced or patched.\n                      type: string\n                  required:\n                  - groupVersionKind\n                  - name\n                  - namespace\n                  - hash\n                  - conditions\n                  type: object\n                type: array\n              webConsoleURL:\n                description: WebConsoleURL is the URL for the cluster's web console\n                  UI.\n                type: string\n            required:\n            - installed\n            type: object\n    version: v1alpha1\n  status:\n    acceptedNames:\n      kind: ''\n      plural: ''\n    conditions: []\n    storedVersions: []\n- apiVersion: apiextensions.k8s.io/v1beta1\n  kind: CustomResourceDefinition\n  metadata:\n    creationTimestamp: null\n    labels:\n      controller-tools.k8s.io: '1.0'\n    name: syncsets.hive.openshift.io\n  spec:\n    group: hive.openshift.io\n    names:\n      kind: SyncSet\n      plural: syncsets\n    scope: Namespaced\n    validation:\n      openAPIV3Schema:\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              clusterDeploymentRefs:\n                description: ClusterDeploymentRefs is the list of LocalObjectReference\n                  indicating which clusters the SyncSet applies to in the SyncSet's\n                  namespace.\n                items:\n                  type: object\n                type: array\n              patches:\n                description: Patches is the list of patches to apply.\n                items:\n                  properties:\n                    groupVersionKind:\n                      description: GroupVersionKind is the Group, Version and Kind\n                        of the object to be patched.\n                      type: object\n                    name:\n                      description: Name is the name of the object to be patched.\n                      type: string\n                    namespace:\n                      description: Namespace is the Namespace in which the object\n                        to patch exists. Defaults to the SyncSet's Namespace.\n                      type: string\n                    patch:\n                      description: Patch is the patch to apply.\n                      format: byte\n                      type: string\n                    patchType:\n                      description: PatchType indicates the PatchType as \"json\" (default),\n                        \"merge\" or \"strategic\".\n                      type: string\n                  required:\n                  - groupVersionKind\n                  - name\n                  - patch\n                  type: object\n                type: array\n              resourceApplyMode:\n                description: ResourceApplyMode indicates if the resource apply mode\n                  is \"upsert\" (default) or \"sync\". ApplyMode \"upsert\" indicates create\n                  and update. ApplyMode \"sync\" indicates create, update and delete.\n                type: string\n              resources:\n                description: Resources is the list of objects to sync.\n                items:\n                  type: object\n                type: array\n            required:\n            - clusterDeploymentRefs\n            type: object\n          status:\n            type: object\n    version: v1alpha1\n  status:\n    acceptedNames:\n      kind: ''\n      plural: ''\n    conditions: []\n    storedVersions: []\n- apiVersion: apiextensions.k8s.io/v1beta1\n  kind: CustomResourceDefinition\n  metadata:\n    creationTimestamp: null\n    labels:\n      controller-tools.k8s.io: '1.0'\n    name: dnszones.hive.openshift.io\n  spec:\n    group: hive.openshift.io\n    names:\n      kind: DNSZone\n      plural: dnszones\n    scope: Namespaced\n    validation:\n      openAPIV3Schema:\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              aws:\n                description: AWS specifies AWS-specific cloud configuration\n                properties:\n                  accountSecret:\n                    description: AccountSecret contains a reference to a secret that\n                      contains AWS credentials for CRUD operations\n                    type: object\n                  region:\n                    description: Region specifies the region-specific API endpoint\n                      to use\n                    type: string\n                required:\n                - accountSecret\n                - region\n                type: object\n              zone:\n                description: Zone is the DNS zoneto host\n                type: string\n            required:\n            - zone\n            type: object\n          status:\n            properties:\n              lastSyncGeneration:\n                description: LastSyncGeneration is the generation of the zone resource\n                  that was last sync'd. This is used to know if the Object has changed\n                  and we should sync immediately.\n                format: int64\n                type: integer\n              lastSyncTimestamp:\n                description: LastSyncTimestamp is the time that the zone was last\n                  sync'd.\n                format: date-time\n                type: string\n            required:\n            - lastSyncGeneration\n            type: object\n    version: v1alpha1\n  status:\n    acceptedNames:\n      kind: ''\n      plural: ''\n    conditions: []\n    storedVersions: []\n- apiVersion: apiextensions.k8s.io/v1beta1\n  kind: CustomResourceDefinition\n  metadata:\n    creationTimestamp: null\n    labels:\n      controller-tools.k8s.io: '1.0'\n    name: syncidentityproviders.hive.openshift.io\n  spec:\n    group: hive.openshift.io\n    names:\n      kind: SyncIdentityProvider\n      plural: syncidentityproviders\n    scope: Namespaced\n    validation:\n      openAPIV3Schema:\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              clusterDeploymentRefs:\n                description: ClusterDeploymentRefs is the list of LocalObjectReference\n                  indicating which clusters the SyncSet applies to in the SyncSet's\n                  namespace.\n                items:\n                  type: object\n                type: array\n              identityProviders:\n                description: IdentityProviders is an ordered list of ways for a user\n                  to identify themselves\n                items:\n                  properties:\n                    basicAuth:\n                      description: basicAuth contains configuration options for the\n                        BasicAuth IdP\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        tlsClientCert:\n                          description: tlsClientCert is an optional reference to a\n                            secret by name that contains the PEM-encoded TLS client\n                            certificate to present when connecting to the server.\n                            The key \"tls.crt\" is used to locate the data. If specified\n                            and the secret or expected key is not found, the identity\n                            provider is not honored. If the specified certificate\n                            data is not valid, the identity provider is not honored.\n                            The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        tlsClientKey:\n                          description: tlsClientKey is an optional reference to a\n                            secret by name that contains the PEM-encoded TLS private\n                            key for the client certificate referenced in tlsClientCert.\n                            The key \"tls.key\" is used to locate the data. If specified\n                            and the secret or expected key is not found, the identity\n                            provider is not honored. If the specified certificate\n                            data is not valid, the identity provider is not honored.\n                            The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        url:\n                          description: url is the remote URL to connect to\n                          type: string\n                      required:\n                      - url\n                      type: object\n                    challenge:\n                      description: challenge indicates whether to issue WWW-Authenticate\n                        challenges for this provider\n                      type: boolean\n                    github:\n                      description: github enables user authentication using GitHub\n                        credentials\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. This can only be configured when hostname is set\n                            to a non-empty value. The namespace for this config map\n                            is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        clientID:\n                          description: clientID is the oauth client ID\n                          type: string\n                        clientSecret:\n                          description: clientSecret is a required reference to the\n                            secret by name containing the oauth client secret. The\n                            key \"clientSecret\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        hostname:\n                          description: hostname is the optional domain (e.g. \"mycompany.com\")\n                            for use with a hosted instance of GitHub Enterprise. It\n                            must match the GitHub Enterprise settings value configured\n                            at /setup/settings#hostname.\n                          type: string\n                        organizations:\n                          description: organizations optionally restricts which organizations\n                            are allowed to log in\n                          items:\n                            type: string\n                          type: array\n                        teams:\n                          description: teams optionally restricts which teams are\n                            allowed to log in. Format is \u003corg\u003e/\u003cteam\u003e.\n                          items:\n                            type: string\n                          type: array\n                      required:\n                      - clientID\n                      - clientSecret\n                      type: object\n                    gitlab:\n                      description: gitlab enables user authentication using GitLab\n                        credentials\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        clientID:\n                          description: clientID is the oauth client ID\n                          type: string\n                        clientSecret:\n                          description: clientSecret is a required reference to the\n                            secret by name containing the oauth client secret. The\n                            key \"clientSecret\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        url:\n                          description: url is the oauth server base URL\n                          type: string\n                      required:\n                      - clientID\n                      - clientSecret\n                      - url\n                      type: object\n                    google:\n                      description: google enables user authentication using Google\n                        credentials\n                      properties:\n                        clientID:\n                          description: clientID is the oauth client ID\n                          type: string\n                        clientSecret:\n                          description: clientSecret is a required reference to the\n                            secret by name containing the oauth client secret. The\n                            key \"clientSecret\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        hostedDomain:\n                          description: hostedDomain is the optional Google App domain\n                            (e.g. \"mycompany.com\") to restrict logins to\n                          type: string\n                      required:\n                      - clientID\n                      - clientSecret\n                      type: object\n                    htpasswd:\n                      description: htpasswd enables user authentication using an HTPasswd\n                        file to validate credentials\n                      properties:\n                        fileData:\n                          description: fileData is a required reference to a secret\n                            by name containing the data to use as the htpasswd file.\n                            The key \"htpasswd\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. If the specified htpasswd data is not\n                            valid, the identity provider is not honored. The namespace\n                            for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                      required:\n                      - fileData\n                      type: object\n                    keystone:\n                      description: keystone enables user authentication using keystone\n                        password credentials\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        domainName:\n                          description: domainName is required for keystone v3\n                          type: string\n                        tlsClientCert:\n                          description: tlsClientCert is an optional reference to a\n                            secret by name that contains the PEM-encoded TLS client\n                            certificate to present when connecting to the server.\n                            The key \"tls.crt\" is used to locate the data. If specified\n                            and the secret or expected key is not found, the identity\n                            provider is not honored. If the specified certificate\n                            data is not valid, the identity provider is not honored.\n                            The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        tlsClientKey:\n                          description: tlsClientKey is an optional reference to a\n                            secret by name that contains the PEM-encoded TLS private\n                            key for the client certificate referenced in tlsClientCert.\n                            The key \"tls.key\" is used to locate the data. If specified\n                            and the secret or expected key is not found, the identity\n                            provider is not honored. If the specified certificate\n                            data is not valid, the identity provider is not honored.\n                            The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        url:\n                          description: url is the remote URL to connect to\n                          type: string\n                        useUsernameIdentity:\n                          description: useUsernameIdentity indicates that users should\n                            be authenticated by username, not keystone ID DEPRECATED\n                            - only use this option for legacy systems to ensure backwards\n                            compatibility\n                          type: boolean\n                      required:\n                      - url\n                      - domainName\n                      type: object\n                    ldap:\n                      description: ldap enables user authentication using LDAP credentials\n                      properties:\n                        attributes:\n                          description: attributes maps LDAP attributes to identities\n                          properties:\n                            email:\n                              description: email is the list of attributes whose values\n                                should be used as the email address. Optional. If\n                                unspecified, no email is set for the identity\n                              items:\n                                type: string\n                              type: array\n                            id:\n                              description: id is the list of attributes whose values\n                                should be used as the user ID. Required. First non-empty\n                                attribute is used. At least one attribute is required.\n                                If none of the listed attribute have a value, authentication\n                                fails. LDAP standard identity attribute is \"dn\"\n                              items:\n                                type: string\n                              type: array\n                            name:\n                              description: name is the list of attributes whose values\n                                should be used as the display name. Optional. If unspecified,\n                                no display name is set for the identity LDAP standard\n                                display name attribute is \"cn\"\n                              items:\n                                type: string\n                              type: array\n                            preferredUsername:\n                              description: preferredUsername is the list of attributes\n                                whose values should be used as the preferred username.\n                                LDAP standard login attribute is \"uid\"\n                              items:\n                                type: string\n                              type: array\n                          required:\n                          - id\n                          type: object\n                        bindDN:\n                          description: bindDN is an optional DN to bind with during\n                            the search phase.\n                          type: string\n                        bindPassword:\n                          description: bindPassword is an optional reference to a\n                            secret by name containing a password to bind with during\n                            the search phase. The key \"bindPassword\" is used to locate\n                            the data. If specified and the secret or expected key\n                            is not found, the identity provider is not honored. The\n                            namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        insecure:\n                          description: 'insecure, if true, indicates the connection\n                            should not use TLS WARNING: Should not be set to `true`\n                            with the URL scheme \"ldaps://\" as \"ldaps://\" URLs always          attempt\n                            to connect using TLS, even when `insecure` is set to `true`\n                            When `true`, \"ldap://\" URLS connect insecurely. When `false`,\n                            \"ldap://\" URLs are upgraded to a TLS connection using\n                            StartTLS as specified in https://tools.ietf.org/html/rfc2830.'\n                          type: boolean\n                        url:\n                          description: 'url is an RFC 2255 URL which specifies the\n                            LDAP search parameters to use. The syntax of the URL is:\n                            ldap://host:port/basedn?attribute?scope?filter'\n                          type: string\n                      required:\n                      - url\n                      - insecure\n                      - attributes\n                      type: object\n                    login:\n                      description: login indicates whether to use this identity provider\n                        for unauthenticated browsers to login against\n                      type: boolean\n                    mappingMethod:\n                      description: mappingMethod determines how identities from this\n                        provider are mapped to users Defaults to \"claim\"\n                      type: string\n                    name:\n                      description: 'name is used to qualify the identities returned\n                        by this provider. - It MUST be unique and not shared by any\n                        other identity provider used - It MUST be a valid path segment:\n                        name cannot equal \".\" or \"..\" or contain \"/\" or \"%\" or \":\"   Ref:\n                        https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName'\n                      type: string\n                    openID:\n                      description: openID enables user authentication using OpenID\n                        credentials\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        claims:\n                          description: claims mappings\n                          properties:\n                            email:\n                              description: email is the list of claims whose values\n                                should be used as the email address. Optional. If\n                                unspecified, no email is set for the identity\n                              items:\n                                type: string\n                              type: array\n                            name:\n                              description: name is the list of claims whose values\n                                should be used as the display name. Optional. If unspecified,\n                                no display name is set for the identity\n                              items:\n                                type: string\n                              type: array\n                            preferredUsername:\n                              description: preferredUsername is the list of claims\n                                whose values should be used as the preferred username.\n                                If unspecified, the preferred username is determined\n                                from the value of the sub claim\n                              items:\n                                type: string\n                              type: array\n                          type: object\n                        clientID:\n                          description: clientID is the oauth client ID\n                          type: string\n                        clientSecret:\n                          description: clientSecret is a required reference to the\n                            secret by name containing the oauth client secret. The\n                            key \"clientSecret\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        extraAuthorizeParameters:\n                          description: extraAuthorizeParameters are any custom parameters\n                            to add to the authorize request.\n                          type: object\n                        extraScopes:\n                          description: extraScopes are any scopes to request in addition\n                            to the standard \"openid\" scope.\n                          items:\n                            type: string\n                          type: array\n                        urls:\n                          description: urls to use to authenticate\n                          properties:\n                            authorize:\n                              description: authorize is the oauth authorization URL\n                              type: string\n                            token:\n                              description: token is the oauth token granting URL\n                              type: string\n                            userInfo:\n                              description: userInfo is the optional userinfo URL.\n                                If present, a granted access_token is used to request\n                                claims If empty, a granted id_token is parsed for\n                                claims\n                              type: string\n                          required:\n                          - authorize\n                          - token\n                          type: object\n                      required:\n                      - clientID\n                      - clientSecret\n                      - urls\n                      - claims\n                      type: object\n                    requestHeader:\n                      description: requestHeader enables user authentication using\n                        request header credentials\n                      properties:\n                        ca:\n                          description: ca is a required reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. Specifically, it allows verification\n                            of incoming requests to prevent header spoofing. The key\n                            \"ca.crt\" is used to locate the data. If the config map\n                            or expected key is not found, the identity provider is\n                            not honored. If the specified ca data is not valid, the\n                            identity provider is not honored. The namespace for this\n                            config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        challengeURL:\n                          description: challengeURL is a URL to redirect unauthenticated\n                            /authorize requests to Unauthenticated requests from OAuth\n                            clients which expect WWW-Authenticate challenges will\n                            be redirected here. ${url} is replaced with the current\n                            URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url}\n                            ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}\n                            Required when challenge is set to true.\n                          type: string\n                        clientCommonNames:\n                          description: clientCommonNames is an optional list of common\n                            names to require a match from. If empty, any client certificate\n                            validated against the clientCA bundle is considered authoritative.\n                          items:\n                            type: string\n                          type: array\n                        emailHeaders:\n                          description: emailHeaders is the set of headers to check\n                            for the email address\n                          items:\n                            type: string\n                          type: array\n                        headers:\n                          description: headers is the set of headers to check for\n                            identity information\n                          items:\n                            type: string\n                          type: array\n                        loginURL:\n                          description: loginURL is a URL to redirect unauthenticated\n                            /authorize requests to Unauthenticated requests from OAuth\n                            clients which expect interactive logins will be redirected\n                            here ${url} is replaced with the current URL, escaped\n                            to be safe in a query parameter   https://www.example.com/sso-login?then=${url}\n                            ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}\n                            Required when login is set to true.\n                          type: string\n                        nameHeaders:\n                          description: nameHeaders is the set of headers to check\n                            for the display name\n                          items:\n                            type: string\n                          type: array\n                        preferredUsernameHeaders:\n                          description: preferredUsernameHeaders is the set of headers\n                            to check for the preferred username\n                          items:\n                            type: string\n                          type: array\n                      required:\n                      - loginURL\n                      - challengeURL\n                      - ca\n                      - headers\n                      - preferredUsernameHeaders\n                      - nameHeaders\n                      - emailHeaders\n                      type: object\n                    type:\n                      description: type identifies the identity provider type for\n                        this entry.\n                      type: string\n                  required:\n                  - name\n                  - challenge\n                  - login\n                  - type\n                  type: object\n                type: array\n            required:\n            - identityProviders\n            - clusterDeploymentRefs\n            type: object\n          status:\n            type: object\n    version: v1alpha1\n  status:\n    acceptedNames:\n      kind: ''\n      plural: ''\n    conditions: []\n    storedVersions: []\n- apiVersion: apiextensions.k8s.io/v1beta1\n  kind: CustomResourceDefinition\n  metadata:\n    creationTimestamp: null\n    labels:\n      controller-tools.k8s.io: '1.0'\n    name: hiveconfigs.hive.openshift.io\n  spec:\n    group: hive.openshift.io\n    names:\n      kind: HiveConfig\n      plural: hiveconfigs\n    scope: Cluster\n    validation:\n      openAPIV3Schema:\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              logLevel:\n                description: logLevel is an intent based logging for an overall component.  It\n                  does not give fine grained control, but it is a simple way to manage\n                  coarse grained logging choices that operators have to interpret\n                  for their operands.\n                type: string\n              managementState:\n                description: managementState indicates whether and how the operator\n                  should manage the component\n                type: string\n              observedConfig:\n                description: observedConfig holds a sparse config that controller\n                  has observed from the cluster state.  It exists in spec because\n                  it is an input to the level for the operator\n                type: object\n              operandSpecs:\n                description: operandSpecs provide customization for functional units\n                  within the component\n                items:\n                  properties:\n                    name:\n                      description: name is the name of this unit.  The operator must\n                        be aware of it.\n                      type: string\n                    operandContainerSpecs:\n                      description: operandContainerSpecs are per-container options\n                      items:\n                        properties:\n                          name:\n                            description: name is the name of the container to modify\n                            type: string\n                          resources:\n                            description: resources are the requests and limits to\n                              place in the container.  Nil means to accept the defaults.\n                            type: object\n                        required:\n                        - name\n                        type: object\n                      type: array\n                    unsupportedResourcePatches:\n                      description: 'unsupportedResourcePatches are applied to the\n                        workload resource for this unit. This is an unsupported workaround\n                        if anything needs to be modified on the workload that is not\n                        otherwise configurable. TODO Decide: alternatively, we could\n                        simply include a RawExtension which is used in place of the\n                        \"normal\" default manifest'\n                      items:\n                        properties:\n                          patch:\n                            description: patch the patch itself\n                            type: string\n                          type:\n                            description: 'type is the type of patch to apply: jsonmerge,\n                              strategicmerge'\n                            type: string\n                        required:\n                        - type\n                        - patch\n                        type: object\n                      type: array\n                  required:\n                  - name\n                  - operandContainerSpecs\n                  - unsupportedResourcePatches\n                  type: object\n                type: array\n              unsupportedConfigOverrides:\n                description: 'unsupportedConfigOverrides holds a sparse config that\n                  will override any previously set options.  It only needs to be the\n                  fields to override it will end up overlaying in the following order:\n                  1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'\n                type: object\n            required:\n            - managementState\n            - logLevel\n            - operandSpecs\n            - unsupportedConfigOverrides\n            - observedConfig\n            type: object\n          status:\n            properties:\n              conditions:\n                description: conditions is a list of conditions and their status\n                items:\n                  properties:\n                    lastTransitionTime:\n                      format: date-time\n                      type: string\n                    message:\n                      type: string\n                    reason:\n                      type: string\n                    status:\n                      type: string\n                    type:\n                      type: string\n                  required:\n                  - type\n                  - status\n                  type: object\n                type: array\n              generations:\n                description: generations are used to determine when an item needs\n                  to be reconciled or has changed in a way that needs a reaction.\n                items:\n                  properties:\n                    group:\n                      description: group is the group of the thing you're tracking\n                      type: string\n                    hash:\n                      description: hash is an optional field set for resources without\n                        generation that are content sensitive like secrets and configmaps\n                      type: string\n                    lastGeneration:\n                      description: lastGeneration is the last generation of the workload\n                        controller involved\n                      format: int64\n                      type: integer\n                    name:\n                      description: name is the name of the thing you're tracking\n                      type: string\n                    namespace:\n                      description: namespace is where the thing you're tracking is\n                      type: string\n                    resource:\n                      description: resource is the resource type of the thing you're\n                        tracking\n                      type: string\n                  required:\n                  - group\n                  - resource\n                  - namespace\n                  - name\n                  - lastGeneration\n                  - hash\n                  type: object\n                type: array\n              observedGeneration:\n                description: observedGeneration is the last generation change you've\n                  dealt with\n                format: int64\n                type: integer\n              readyReplicas:\n                description: readyReplicas indicates how many replicas are ready and\n                  at the desired state\n                format: int32\n                type: integer\n              version:\n                description: version is the level this availability applies to\n                type: string\n            required:\n            - version\n            - readyReplicas\n            - generations\n            type: object\n    version: v1alpha1\n  status:\n    acceptedNames:\n      kind: ''\n      plural: ''\n    conditions: []\n    storedVersions: []\n- apiVersion: apiextensions.k8s.io/v1beta1\n  kind: CustomResourceDefinition\n  metadata:\n    creationTimestamp: null\n    labels:\n      controller-tools.k8s.io: '1.0'\n    name: selectorsyncidentityproviders.hive.openshift.io\n  spec:\n    group: hive.openshift.io\n    names:\n      kind: SelectorSyncIdentityProvider\n      plural: selectorsyncidentityproviders\n    scope: Cluster\n    validation:\n      openAPIV3Schema:\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            properties:\n              clusterDeploymentSelector:\n                description: ClusterDeploymentSelector is a LabelSelector indicating\n                  which clusters the SelectorIdentityProvider applies to in any namespace.\n                type: object\n              identityProviders:\n                description: IdentityProviders is an ordered list of ways for a user\n                  to identify themselves\n                items:\n                  properties:\n                    basicAuth:\n                      description: basicAuth contains configuration options for the\n                        BasicAuth IdP\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        tlsClientCert:\n                          description: tlsClientCert is an optional reference to a\n                            secret by name that contains the PEM-encoded TLS client\n                            certificate to present when connecting to the server.\n                            The key \"tls.crt\" is used to locate the data. If specified\n                            and the secret or expected key is not found, the identity\n                            provider is not honored. If the specified certificate\n                            data is not valid, the identity provider is not honored.\n                            The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        tlsClientKey:\n                          description: tlsClientKey is an optional reference to a\n                            secret by name that contains the PEM-encoded TLS private\n                            key for the client certificate referenced in tlsClientCert.\n                            The key \"tls.key\" is used to locate the data. If specified\n                            and the secret or expected key is not found, the identity\n                            provider is not honored. If the specified certificate\n                            data is not valid, the identity provider is not honored.\n                            The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        url:\n                          description: url is the remote URL to connect to\n                          type: string\n                      required:\n                      - url\n                      type: object\n                    challenge:\n                      description: challenge indicates whether to issue WWW-Authenticate\n                        challenges for this provider\n                      type: boolean\n                    github:\n                      description: github enables user authentication using GitHub\n                        credentials\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. This can only be configured when hostname is set\n                            to a non-empty value. The namespace for this config map\n                            is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        clientID:\n                          description: clientID is the oauth client ID\n                          type: string\n                        clientSecret:\n                          description: clientSecret is a required reference to the\n                            secret by name containing the oauth client secret. The\n                            key \"clientSecret\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        hostname:\n                          description: hostname is the optional domain (e.g. \"mycompany.com\")\n                            for use with a hosted instance of GitHub Enterprise. It\n                            must match the GitHub Enterprise settings value configured\n                            at /setup/settings#hostname.\n                          type: string\n                        organizations:\n                          description: organizations optionally restricts which organizations\n                            are allowed to log in\n                          items:\n                            type: string\n                          type: array\n                        teams:\n                          description: teams optionally restricts which teams are\n                            allowed to log in. Format is \u003corg\u003e/\u003cteam\u003e.\n                          items:\n                            type: string\n                          type: array\n                      required:\n                      - clientID\n                      - clientSecret\n                      type: object\n                    gitlab:\n                      description: gitlab enables user authentication using GitLab\n                        credentials\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        clientID:\n                          description: clientID is the oauth client ID\n                          type: string\n                        clientSecret:\n                          description: clientSecret is a required reference to the\n                            secret by name containing the oauth client secret. The\n                            key \"clientSecret\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        url:\n                          description: url is the oauth server base URL\n                          type: string\n                      required:\n                      - clientID\n                      - clientSecret\n                      - url\n                      type: object\n                    google:\n                      description: google enables user authentication using Google\n                        credentials\n                      properties:\n                        clientID:\n                          description: clientID is the oauth client ID\n                          type: string\n                        clientSecret:\n                          description: clientSecret is a required reference to the\n                            secret by name containing the oauth client secret. The\n                            key \"clientSecret\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        hostedDomain:\n                          description: hostedDomain is the optional Google App domain\n                            (e.g. \"mycompany.com\") to restrict logins to\n                          type: string\n                      required:\n                      - clientID\n                      - clientSecret\n                      type: object\n                    htpasswd:\n                      description: htpasswd enables user authentication using an HTPasswd\n                        file to validate credentials\n                      properties:\n                        fileData:\n                          description: fileData is a required reference to a secret\n                            by name containing the data to use as the htpasswd file.\n                            The key \"htpasswd\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. If the specified htpasswd data is not\n                            valid, the identity provider is not honored. The namespace\n                            for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                      required:\n                      - fileData\n                      type: object\n                    keystone:\n                      description: keystone enables user authentication using keystone\n                        password credentials\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        domainName:\n                          description: domainName is required for keystone v3\n                          type: string\n                        tlsClientCert:\n                          description: tlsClientCert is an optional reference to a\n                            secret by name that contains the PEM-encoded TLS client\n                            certificate to present when connecting to the server.\n                            The key \"tls.crt\" is used to locate the data. If specified\n                            and the secret or expected key is not found, the identity\n                            provider is not honored. If the specified certificate\n                            data is not valid, the identity provider is not honored.\n                            The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        tlsClientKey:\n                          description: tlsClientKey is an optional reference to a\n                            secret by name that contains the PEM-encoded TLS private\n                            key for the client certificate referenced in tlsClientCert.\n                            The key \"tls.key\" is used to locate the data. If specified\n                            and the secret or expected key is not found, the identity\n                            provider is not honored. If the specified certificate\n                            data is not valid, the identity provider is not honored.\n                            The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        url:\n                          description: url is the remote URL to connect to\n                          type: string\n                        useUsernameIdentity:\n                          description: useUsernameIdentity indicates that users should\n                            be authenticated by username, not keystone ID DEPRECATED\n                            - only use this option for legacy systems to ensure backwards\n                            compatibility\n                          type: boolean\n                      required:\n                      - url\n                      - domainName\n                      type: object\n                    ldap:\n                      description: ldap enables user authentication using LDAP credentials\n                      properties:\n                        attributes:\n                          description: attributes maps LDAP attributes to identities\n                          properties:\n                            email:\n                              description: email is the list of attributes whose values\n                                should be used as the email address. Optional. If\n                                unspecified, no email is set for the identity\n                              items:\n                                type: string\n                              type: array\n                            id:\n                              description: id is the list of attributes whose values\n                                should be used as the user ID. Required. First non-empty\n                                attribute is used. At least one attribute is required.\n                                If none of the listed attribute have a value, authentication\n                                fails. LDAP standard identity attribute is \"dn\"\n                              items:\n                                type: string\n                              type: array\n                            name:\n                              description: name is the list of attributes whose values\n                                should be used as the display name. Optional. If unspecified,\n                                no display name is set for the identity LDAP standard\n                                display name attribute is \"cn\"\n                              items:\n                                type: string\n                              type: array\n                            preferredUsername:\n                              description: preferredUsername is the list of attributes\n                                whose values should be used as the preferred username.\n                                LDAP standard login attribute is \"uid\"\n                              items:\n                                type: string\n                              type: array\n                          required:\n                          - id\n                          type: object\n                        bindDN:\n                          description: bindDN is an optional DN to bind with during\n                            the search phase.\n                          type: string\n                        bindPassword:\n                          description: bindPassword is an optional reference to a\n                            secret by name containing a password to bind with during\n                            the search phase. The key \"bindPassword\" is used to locate\n                            the data. If specified and the secret or expected key\n                            is not found, the identity provider is not honored. The\n                            namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        insecure:\n                          description: 'insecure, if true, indicates the connection\n                            should not use TLS WARNING: Should not be set to `true`\n                            with the URL scheme \"ldaps://\" as \"ldaps://\" URLs always          attempt\n                            to connect using TLS, even when `insecure` is set to `true`\n                            When `true`, \"ldap://\" URLS connect insecurely. When `false`,\n                            \"ldap://\" URLs are upgraded to a TLS connection using\n                            StartTLS as specified in https://tools.ietf.org/html/rfc2830.'\n                          type: boolean\n                        url:\n                          description: 'url is an RFC 2255 URL which specifies the\n                            LDAP search parameters to use. The syntax of the URL is:\n                            ldap://host:port/basedn?attribute?scope?filter'\n                          type: string\n                      required:\n                      - url\n                      - insecure\n                      - attributes\n                      type: object\n                    login:\n                      description: login indicates whether to use this identity provider\n                        for unauthenticated browsers to login against\n                      type: boolean\n                    mappingMethod:\n                      description: mappingMethod determines how identities from this\n                        provider are mapped to users Defaults to \"claim\"\n                      type: string\n                    name:\n                      description: 'name is used to qualify the identities returned\n                        by this provider. - It MUST be unique and not shared by any\n                        other identity provider used - It MUST be a valid path segment:\n                        name cannot equal \".\" or \"..\" or contain \"/\" or \"%\" or \":\"   Ref:\n                        https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName'\n                      type: string\n                    openID:\n                      description: openID enables user authentication using OpenID\n                        credentials\n                      properties:\n                        ca:\n                          description: ca is an optional reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. The key \"ca.crt\" is used to locate\n                            the data. If specified and the config map or expected\n                            key is not found, the identity provider is not honored.\n                            If the specified ca data is not valid, the identity provider\n                            is not honored. If empty, the default system roots are\n                            used. The namespace for this config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        claims:\n                          description: claims mappings\n                          properties:\n                            email:\n                              description: email is the list of claims whose values\n                                should be used as the email address. Optional. If\n                                unspecified, no email is set for the identity\n                              items:\n                                type: string\n                              type: array\n                            name:\n                              description: name is the list of claims whose values\n                                should be used as the display name. Optional. If unspecified,\n                                no display name is set for the identity\n                              items:\n                                type: string\n                              type: array\n                            preferredUsername:\n                              description: preferredUsername is the list of claims\n                                whose values should be used as the preferred username.\n                                If unspecified, the preferred username is determined\n                                from the value of the sub claim\n                              items:\n                                type: string\n                              type: array\n                          type: object\n                        clientID:\n                          description: clientID is the oauth client ID\n                          type: string\n                        clientSecret:\n                          description: clientSecret is a required reference to the\n                            secret by name containing the oauth client secret. The\n                            key \"clientSecret\" is used to locate the data. If the\n                            secret or expected key is not found, the identity provider\n                            is not honored. The namespace for this secret is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                secret\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        extraAuthorizeParameters:\n                          description: extraAuthorizeParameters are any custom parameters\n                            to add to the authorize request.\n                          type: object\n                        extraScopes:\n                          description: extraScopes are any scopes to request in addition\n                            to the standard \"openid\" scope.\n                          items:\n                            type: string\n                          type: array\n                        urls:\n                          description: urls to use to authenticate\n                          properties:\n                            authorize:\n                              description: authorize is the oauth authorization URL\n                              type: string\n                            token:\n                              description: token is the oauth token granting URL\n                              type: string\n                            userInfo:\n                              description: userInfo is the optional userinfo URL.\n                                If present, a granted access_token is used to request\n                                claims If empty, a granted id_token is parsed for\n                                claims\n                              type: string\n                          required:\n                          - authorize\n                          - token\n                          type: object\n                      required:\n                      - clientID\n                      - clientSecret\n                      - urls\n                      - claims\n                      type: object\n                    requestHeader:\n                      description: requestHeader enables user authentication using\n                        request header credentials\n                      properties:\n                        ca:\n                          description: ca is a required reference to a config map\n                            by name containing the PEM-encoded CA bundle. It is used\n                            as a trust anchor to validate the TLS certificate presented\n                            by the remote server. Specifically, it allows verification\n                            of incoming requests to prevent header spoofing. The key\n                            \"ca.crt\" is used to locate the data. If the config map\n                            or expected key is not found, the identity provider is\n                            not honored. If the specified ca data is not valid, the\n                            identity provider is not honored. The namespace for this\n                            config map is openshift-config.\n                          properties:\n                            name:\n                              description: name is the metadata.name of the referenced\n                                config map\n                              type: string\n                          required:\n                          - name\n                          type: object\n                        challengeURL:\n                          description: challengeURL is a URL to redirect unauthenticated\n                            /authorize requests to Unauthenticated requests from OAuth\n                            clients which expect WWW-Authenticate challenges will\n                            be redirected here. ${url} is replaced with the current\n                            URL, escaped to be safe in a query parameter   https://www.example.com/sso-login?then=${url}\n                            ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}\n                            Required when challenge is set to true.\n                          type: string\n                        clientCommonNames:\n                          description: clientCommonNames is an optional list of common\n                            names to require a match from. If empty, any client certificate\n                            validated against the clientCA bundle is considered authoritative.\n                          items:\n                            type: string\n                          type: array\n                        emailHeaders:\n                          description: emailHeaders is the set of headers to check\n                            for the email address\n                          items:\n                            type: string\n                          type: array\n                        headers:\n                          description: headers is the set of headers to check for\n                            identity information\n                          items:\n                            type: string\n                          type: array\n                        loginURL:\n                          description: loginURL is a URL to redirect unauthenticated\n                            /authorize requests to Unauthenticated requests from OAuth\n                            clients which expect interactive logins will be redirected\n                            here ${url} is replaced with the current URL, escaped\n                            to be safe in a query parameter   https://www.example.com/sso-login?then=${url}\n                            ${query} is replaced with the current query string   https://www.example.com/auth-proxy/oauth/authorize?${query}\n                            Required when login is set to true.\n                          type: string\n                        nameHeaders:\n                          description: nameHeaders is the set of headers to check\n                            for the display name\n                          items:\n                            type: string\n                          type: array\n                        preferredUsernameHeaders:\n                          description: preferredUsernameHeaders is the set of headers\n                            to check for the preferred username\n                          items:\n                            type: string\n                          type: array\n                      required:\n                      - loginURL\n                      - challengeURL\n                      - ca\n                      - headers\n                      - preferredUsernameHeaders\n                      - nameHeaders\n                      - emailHeaders\n                      type: object\n                    type:\n                      description: type identifies the identity provider type for\n                        this entry.\n                      type: string\n                  required:\n                  - name\n                  - challenge\n                  - login\n                  - type\n                  type: object\n                type: array\n            required:\n            - identityProviders\n            type: object\n          status:\n            type: object\n    version: v1alpha1\n  status:\n    acceptedNames:\n      kind: ''\n      plural: ''\n    conditions: []\n    storedVersions: []\n","packages":"- channels:\n  - currentCSV: hive-operator-0.0.1\n    name: alpha\n  packageName: hive-operator\n"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"hive-operators","namespace":"openshift-hive"}}
  creationTimestamp: 2019-03-07T14:21:05Z
  name: hive-operators
  namespace: openshift-hive
  resourceVersion: "4896715"
  selfLink: /api/v1/namespaces/openshift-hive/configmaps/hive-operators
  uid: 3e81dec2-40e4-11e9-bd7d-0e6ed767b7c0
